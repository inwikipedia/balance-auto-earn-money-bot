{"version":3,"sources":["services/LocalStoreService.js","context/FiatContext.js","components/BalancesTable.js","components/PieChart.js","context/SocketContext.js","context/BalancesContext.js","context/ServerContext.js","components/StatusView.js","context/StartingBalanceContext.js","components/PerformanceSummary.js","pages/Portfolio.js","components/TimelineView.js","components/LineChart.js","components/LineChartCoins.js","context/PerformanceContext.js","pages/PPerformance.js","components/HistoryTable.js","pages/EventHistory.js","components/ConfigP1.js","components/ConfigP2.js","components/ConfigP3.js","components/ConfigMain.js","pages/Configuration.js","routes/Routes.js","pages/Main.js","services/SocketService.js","App.js","index.js"],"names":["useLocalStore","localStorageKey","defaultValue","React","useState","localStorage","getItem","value","setValue","useEffect","setItem","FiatContext","createContext","FiatProvider","props","fiatStore","fiat","setFiat","Provider","children","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","align","disablePadding","label","useTableHeadStyles","makeStyles","theme","headcolor","palette","type","backgroundColor","EnhancedTableHead","checkbox","onSelectAllClick","numSelected","rowCount","onRequestSort","headless","classes","Checkbox","indeterminate","checked","onChange","inputProps","TableHead","TableRow","className","TableCell","padding","headCell","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","spacing","paddingRight","highlight","color","secondary","main","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","selected","portfolio","handleOrder","setSelected","length","Toolbar","clsx","Typography","variant","component","join","Button","style","width","startIcon","selectedCoins","i","selectedCoin","find","coin","push","useStyles","paper","marginBottom","table","minWidth","paddingTop","paddingBottom","border","clip","height","margin","overflow","position","top","formatResult","num","dec","parseFloat","toFixed","BalancesTable","setOrder","setOrderBy","useTheme","balances","threshold","onOrder","rows","JSON","parse","Paper","TableContainer","Table","size","aria-labelledby","aria-label","newSelecteds","n","filter","TableBody","row","isItemSelected","indexOf","labelId","sidechip","sidelabel","side","reverse","distribution","target","Chip","error","disabled","success","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","scope","number","last","trade","PieChart","mode","data","tooltip","container","background","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextColor","radialLabelsLinkColor","sliceLabelsSkipAngle","sliceLabelsTextColor","socket","socketio","BalancesContext","BalancesProvider","setBalances","ServerContext","ServerProvider","status","updated","server","setServer","flexGrow","StatusView","statuschip","useContext","Grid","alignItems","item","xs","StartingBalanceContext","StartingBalanceProvider","startingBalance","setStartingBalance","performanceSummary","setPerformanceSummary","currency","leftTxt","rightTxt","change","currentValue","forEach","eur","usd","btc","netvalue","coins","c","Portfolio","emit","noWrap","stepper","TimelineView","performance","numdays","startdate","date1","Date","date","setDate","getDate","timeDiff","getTime","Math","round","getFullYear","getMonth","toString","padStart","Stepper","alternativeLabel","activeStep","connector","ColorlibConnector","Step","StepLabel","StepIconComponent","ColorlibStepIcon","withStyles","backgroundImage","completed","line","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","display","justifyContent","boxShadow","icons","1","2","String","icon","LineChart","data1","initialValue","initialFiatValue","values","fiatValues","fiatChange","netvalues","netchange","data2","dayOne","initial","day","fiatPrice","fiatValue","price","x","y","replace","getTheme","axis","ticks","stroke","fill","legend","crosshair","uniq","seen","hasOwnProperty","sliceTooltip","points","point","serieId","yFormatted","xScale","format","useUTC","precision","xFormat","yScale","min","max","stacked","yFormat","curve","axisTop","axisRight","axisBottom","axisLeft","legendOffset","legendPosition","enablePoints","enableGridX","enableGridY","enableSlices","crosshairType","lineWidth","prices","serieColor","legends","anchor","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","itemTextColor","effects","on","itemBackground","PerformanceContext","PerformanceProvider","setPerformance","Performance","StyledTableCell","head","common","black","white","body","fontSize","StyledTableRow","action","errortext","HistoryTable","total","eventdata","setEventdata","page","setFilter","logs","history","setHistory","hist","log","time","handleHistoryChange","summary","off","pt","Box","p","ToggleButtonGroup","newTypes","ToggleButton","noValidate","autoComplete","TextField","e","Pagination","count","ceil","shape","newPage","EventHistory","AddressForm","Fragment","gutterBottom","required","name","fullWidth","sm","FormControlLabel","control","layout","marginLeft","marginRight","marginTop","breakpoints","up","buttons","button","steps","getStepContent","step","Error","ConfigMain","setActiveStep","CssBaseline","Configuration","routesUp","path","sidebarName","navbarName","PieChartIcon","ShowChartIcon","PPerformance","HistoryIcon","routesDown","SettingsIcon","appBar","drawer","logo","maxWidth","flexShrink","drawerPaper","drawerContainer","content","Main","setMode","setFiatStore","handleFiat","createMuiTheme","StyledButton","ThemeProvider","AppBar","src","alt","Drawer","List","prop","key","to","textDecoration","ListItem","ListItemIcon","ListItemText","primaryTypographyProps","Divider","pl","labelPlacement","disableRipple","exact","SocketService","enqueueSnackbar","useSnackbar","now","update","newPerformance","updatePerformance","sb","handleBalances","autoHideDuration","handleEvent","disconnect","App","maxSnack","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5925ad84.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const useLocalStore = (localStorageKey, defaultValue) => {\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(localStorageKey) || defaultValue\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n\r\n  return [value, setValue];\r\n};","import React, { useState, createContext } from 'react';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\n\r\nexport const FiatContext = createContext();\r\n\r\nexport const FiatProvider = (props) => {\r\n    const fiatStore = useLocalStore('fiat', 'EUR')[0];\r\n    const [fiat, setFiat] = useState(fiatStore);\r\n\r\n    return (\r\n        <FiatContext.Provider value={[fiat, setFiat]}>\r\n            {props.children}\r\n        </FiatContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'coin', align: 'left', disablePadding: true, label: 'Coin' },\r\n    { id: 'amount', align: 'right', disablePadding: false, label: 'Amount' },\r\n    { id: 'price', align: 'right', disablePadding: false, label: 'BTC Price' },\r\n    { id: 'value', align: 'right', disablePadding: false, label: 'BTC Value' },\r\n    { id: 'distribution', align: 'right', disablePadding: false, label: 'Distribution %' },\r\n    { id: 'target', align: 'right', disablePadding: false, label: 'Target %' },\r\n    { id: 'trade', align: 'right', disablePadding: false, label: 'Trade' },\r\n    { id: 'side', align: 'right', disablePadding: false, label: 'Order Side' },\r\n];\r\n\r\nconst useTableHeadStyles = makeStyles((theme) => ({\r\n    headcolor:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                backgroundColor: '#aaaaaa',\r\n            }\r\n            : {\r\n                backgroundColor: '#777777',\r\n            },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n    // const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headless } = props;\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headless } = props;\r\n    const classes = useTableHeadStyles();\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    let checkbox;\r\n    if (!headless) {\r\n        checkbox = <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select coins' }}\r\n        />\r\n    } else {\r\n        checkbox = null;\r\n    }\r\n    return (\r\n        <TableHead>\r\n            {/* <TableRow style={{ backgroundColor: '#cccccc' }}> */}\r\n            <TableRow className={classes.headcolor}>\r\n                <TableCell padding=\"checkbox\">\r\n                    {checkbox}\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { selected, headless, portfolio, handleOrder, setSelected } = props;\r\n    const numSelected = selected.length;\r\n\r\n    function onOrder() {\r\n        setSelected([]);\r\n        let selectedCoins = [];\r\n        for (let i = 0; i < selected.length; i++) {\r\n            let selectedCoin = portfolio.find(({ coin }) => coin === selected[i]);\r\n            if (selectedCoin.coin !== 'BTC') selectedCoins.push(selectedCoin);\r\n        }\r\n\r\n        handleOrder(selectedCoins);\r\n    }\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} {(numSelected === 1) ? 'coin' : 'coins'} selected: {selected.join()}\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"subtitle1\" id=\"tableTitle\" component=\"div\">\r\n                    {(!headless) ? ('Select coins to manually submit order') : ('Running in automatic mode')}\r\n                </Typography>\r\n            )}\r\n\r\n            {(numSelected > 0) && (\r\n                <Button variant=\"contained\" color=\"secondary\" style={{ width: '220px' }} startIcon={<BackupIcon />} onClick={onOrder}>\r\n                    Submit Order\r\n                </Button>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    selected: PropTypes.array.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n    portfolio: PropTypes.array.isRequired,\r\n    handleOrder: PropTypes.func.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n        \"& .MuiTableCell-sizeSmall\": {\r\n            paddingTop: \"9px\",\r\n            paddingBottom: \"9px\",\r\n        }\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nfunction formatResult(num, dec) {\r\n    return parseFloat(num.toFixed(dec));\r\n}\r\n\r\nexport default function BalancesTable(props) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const theme = useTheme();\r\n    const balances = props.balances;\r\n    const threshold = balances.threshold;\r\n    const headless = balances.headless || false;\r\n    const handleOrder = props.onOrder;\r\n\r\n    let rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (selected.length === 0) {\r\n            const newSelecteds = rows.map((n) => n.coin).filter(coin => coin !== 'BTC');\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, coin) => {\r\n        if (!headless && coin !== 'BTC') {\r\n            const selectedIndex = selected.indexOf(coin);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, coin);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n        }\r\n    };\r\n\r\n    const isSelected = (coin) => selected.indexOf(coin) !== -1;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar selected={selected} headless={headless} portfolio={rows} handleOrder={handleOrder} setSelected={setSelected} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        size=\"small\"\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                            headless={headless}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.coin);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                                    let sidechip = <div style={{ color: '#999999', width: '120px' }}>-</div>;\r\n                                    let sidelabel = row.side;\r\n                                    if (row.reverse) sidelabel += ' (reverse)';\r\n\r\n                                    if (row.side === 'sell') {\r\n                                        if (row.distribution / row.target - 1 >= threshold / 100) {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '120px' }} />\r\n                                        } else {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                        }\r\n                                    } else if (row.side === 'buy') {\r\n                                        if (row.distribution / row.target - 1 <= -threshold / 100) {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '120px' }} />\r\n                                        } else {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                        }\r\n                                    }\r\n\r\n                                    let checkbox;\r\n                                    if (!headless && row.coin !== 'BTC') {\r\n                                        checkbox = <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    } else {\r\n                                        checkbox = null;\r\n                                    }\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.coin)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.coin}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                {checkbox}\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.coin}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.number}</TableCell>\r\n                                            <TableCell align=\"right\">{formatResult(row.last, 8)}</TableCell>\r\n                                            <TableCell align=\"right\">{formatResult(row.value, 8)}</TableCell>\r\n                                            <TableCell align=\"right\">{row.distribution}</TableCell>\r\n                                            <TableCell align=\"right\">{row.target}</TableCell>\r\n                                            <TableCell align=\"right\">{formatResult(row.trade, 8)}</TableCell>\r\n                                            <TableCell align=\"right\">{sidechip}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import { ResponsivePie } from '@nivo/pie';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function PieChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    const balances = props.balances;\r\n\r\n    const portfolio = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    const data = portfolio.map(function (coin) {\r\n        return {\r\n            'id': coin.coin,\r\n            'label': coin.coin,\r\n            'value': coin.distribution,\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ResponsivePie\r\n            theme={{\r\n                tooltip: {\r\n                    color: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                    container: {\r\n                        background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\"\r\n                    },\r\n                },\r\n            }}\r\n            data={data}\r\n            margin={{ top: 20, right: 80, bottom: 20, left: 80 }}\r\n            innerRadius={0.5}\r\n            padAngle={1}\r\n            cornerRadius={7}\r\n            colors={{ scheme: 'red_yellow_blue' }}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [['darker', '0.2']] }}\r\n            radialLabelsSkipAngle={10}\r\n            radialLabelsTextColor={(mode === 'light') ? \"#000000\" : \"#FFFFFF\"}\r\n            radialLabelsLinkColor={{ from: 'color' }}\r\n            sliceLabelsSkipAngle={10}\r\n            sliceLabelsTextColor={(mode === 'light') ? \"#000000\" : \"#FFFFFF\"}\r\n        />\r\n    )\r\n}","import socketio from \"socket.io-client\";\r\n\r\nexport const socket = socketio('/');","import React, { useState, createContext } from 'react';\r\n\r\nexport const BalancesContext = createContext();\r\n\r\nexport const BalancesProvider = (props) => {\r\n    const [balances, setBalances] = useState({});\r\n\r\n    return (\r\n        <BalancesContext.Provider value={[balances, setBalances]}>\r\n            {props.children}\r\n        </BalancesContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const ServerContext = createContext();\r\n\r\nexport const ServerProvider = (props) => {\r\n    const [server, setServer] = useState({\r\n        status: 'disconnected',\r\n        updated: '---',\r\n    });\r\n\r\n    return (\r\n        <ServerContext.Provider value={[server, setServer]}>\r\n            {props.children}\r\n        </ServerContext.Provider>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { ServerContext } from '../context/ServerContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        height: '68px',\r\n        minWidth: '420px',\r\n    },\r\n}));\r\n\r\nexport default function StatusView() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { status, updated } = useContext(ServerContext)[0];\r\n\r\n    let statuschip;\r\n    if (status === 'connected') {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '90px' }} />\r\n    } else {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '110px' }} />\r\n    }\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid container item alignItems=\"center\" xs={6}>\r\n                    <Grid item xs={5}><Typography>Server status: </Typography></Grid>\r\n                    <Grid item xs={7}>{statuschip}</Grid>\r\n                </Grid>\r\n                <Grid container item alignItems=\"center\" xs={6}>\r\n                    <Grid item xs={12}><Typography>Last update: <b>{updated}</b></Typography></Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper >\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const StartingBalanceContext = createContext();\r\n\r\nexport const StartingBalanceProvider = (props) => {\r\n    const [startingBalance, setStartingBalance] = useState([]);\r\n\r\n    return (\r\n        <StartingBalanceContext.Provider value={[startingBalance, setStartingBalance]}>\r\n            {props.children}\r\n        </StartingBalanceContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nexport default function StatusView(props) {\r\n    const startingBalance = useContext(StartingBalanceContext)[0];\r\n    const [performanceSummary, setPerformanceSummary] = useState({});\r\n    const balances = props.balances;\r\n    const type = props.type;\r\n    const fiat = useContext(FiatContext)[0];\r\n    let currency = (type === 'btc') ? 'BTC' : (type === 'fiat') ? fiat : 'Net BTC';\r\n    const leftTxt = (type === 'net-result') ? 'Net change (BTC)' : `${currency} value`;\r\n    const rightTxt = (type === 'net-result') ? 'Net change (%)' : `${currency} change`;\r\n\r\n    useEffect(() => {\r\n        let rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n\r\n        let currentValue = 0;\r\n        rows.forEach((coin) => {\r\n            currentValue += coin.number * coin.last;\r\n        });\r\n\r\n        if (type === 'fiat') currentValue = currentValue * ((fiat === 'EUR') ? balances.eur : balances.usd);\r\n\r\n        let change;\r\n        if (type === 'btc') change = (currentValue / startingBalance.btc - 1) * 100;\r\n        else if (fiat === 'EUR') change = (currentValue / startingBalance.eur - 1) * 100;\r\n        else change = (currentValue / startingBalance.usd - 1) * 100;\r\n\r\n        let netvalue = 0;\r\n\r\n        if (startingBalance.coins) rows.forEach((coin) => {\r\n            let c = startingBalance.coins.find(c => c.coin === coin.coin);\r\n            netvalue += c.number * coin.last;\r\n        });\r\n\r\n        if (type === 'net-result') {\r\n            change = ((currentValue - netvalue) / startingBalance.btc) * 100\r\n            currentValue = currentValue - netvalue;\r\n        }\r\n\r\n        if (change) {\r\n            if (change < 100) change = change.toFixed(2)\r\n            else if (change < 1000) change = change.toFixed(1);\r\n            else change = change.toFixed(0);\r\n        } else {\r\n            change = '0';\r\n        }\r\n        if (currentValue) {\r\n            if (currentValue < 0.1) currentValue = currentValue.toFixed(6)\r\n            else if (currentValue < 1) currentValue = currentValue.toFixed(5)\r\n            else if (currentValue < 10) currentValue = currentValue.toFixed(4)\r\n            else if (currentValue < 100) currentValue = currentValue.toFixed(3)\r\n            else if (currentValue < 1000) currentValue = currentValue.toFixed(2);\r\n            else currentValue = currentValue.toFixed(2);\r\n        } else {\r\n            currentValue = '0';\r\n        }\r\n\r\n        setPerformanceSummary({\r\n            value: currentValue,\r\n            change: change,\r\n        });\r\n    }, [balances, startingBalance, fiat]);\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\">\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h3\">{performanceSummary.value}</Typography></Grid>\r\n                <Grid item xs={12}><Typography>{leftTxt}</Typography></Grid>\r\n            </Grid>\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h3\">{performanceSummary.change}%</Typography></Grid>\r\n                <Grid item xs={12}><Typography>{rightTxt}</Typography></Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BalancesTable from \"../components/BalancesTable\";\r\nimport PieChart from \"../components/PieChart\";\r\nimport { socket } from '../context/SocketContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport StatusView from \"../components/StatusView\";\r\nimport PerformanceSummary from \"../components/PerformanceSummary\";\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Portfolio = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const startingBalance = useContext(StartingBalanceContext)[0];\r\n\r\n  useEffect(() => {\r\n    if (socket && startingBalance.length === 0) socket.emit(\"get-starting-balances\");\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  function handleOrder(selected) {\r\n    socket.emit(\"market-order\", selected);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} alignItems=\"flex-start\">\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Portfolio\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper style={{ height: '100px', minWidth: '420px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='btc' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper style={{ height: '100px', minWidth: '420px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='fiat' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper style={{ height: '100px', minWidth: '420px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='net-result' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <BalancesTable balances={balances} onOrder={handleOrder} />\r\n        </Grid>\r\n        <Grid container item xs={4}>\r\n          <Grid item xs={12}>\r\n            <Paper style={{ height: '500px' }} className={classes.paper}>\r\n              <PieChart balances={balances} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        height: '68px',\r\n        minWidth: '420px',\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport default function TimelineView(props) {\r\n    const classes = useStyles();\r\n    const performance = props.data || [];\r\n    let numdays = '..';\r\n    let startdate = '----/--/--';\r\n\r\n    if (performance.length !== 0) {\r\n        let date1 = new Date(performance[0].date);\r\n        date1.setDate(new Date(date1).getDate() + 1) // Move ahead one day, as starting point is stored 'yesterday'\r\n        let date2 = new Date();\r\n        var timeDiff = date2.getTime() - date1.getTime();\r\n\r\n        numdays = Math.round(timeDiff / (1000 * 3600 * 24));\r\n        startdate = date1.getFullYear() + \"/\" + (date1.getMonth() + 1).toString().padStart(2, '0') + \"/\" + date1.getDate().toString().padStart(2, '0');\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item xs={3}><Typography align={'right'}>Start <b>{startdate}</b></Typography></Grid>\r\n                <Grid item xs={6}>\r\n                    <Stepper className={classes.stepper} alternativeLabel activeStep={1} connector={<ColorlibConnector />}>\r\n                        <Step key={0}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}></StepLabel>\r\n                        </Step>\r\n                        <Step key={1}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}></StepLabel>\r\n                        </Step>\r\n                    </Stepper>\r\n                </Grid>\r\n                <Grid item xs={3}><Typography>Active <b>{numdays}</b> {(numdays === 1) ? 'day' : 'days'}</Typography></Grid>\r\n            </Grid>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon />,\r\n        2: <Check />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport \"./LineChart.css\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    const startingBalance = useContext(StartingBalanceContext)[0];\r\n\r\n    let performance = props.performance;\r\n    let type = props.type;\r\n    let title = props.title;\r\n    const balances = props.balances;\r\n    const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    let values = [];\r\n    let fiatValues = [];\r\n    let change = [];\r\n    let fiatChange = [];\r\n    let netvalues = [];\r\n    let netchange = [];\r\n    let data1, data2 = [];\r\n    let dayOne = [];\r\n    const fiat = useContext(FiatContext)[0];\r\n\r\n    rows.forEach((coin, i) => {\r\n        dayOne[i] = {\r\n            coin: coin.coin,\r\n            initial: 0,\r\n        };\r\n    });\r\n\r\n    let initialValue;\r\n    let initialFiatValue;\r\n\r\n    if (startingBalance.length !== 0) {\r\n        initialValue = startingBalance.btc;\r\n        initialFiatValue = (fiat === 'EUR') ? startingBalance.eur : startingBalance.usd;\r\n    }\r\n\r\n    if (performance.length !== 0) {\r\n        performance.forEach((day) => {\r\n            const fiatPrice = (fiat === 'EUR') ? day.eur : day.usd;\r\n            let value = 0;\r\n            let fiatValue = 0;\r\n            day.coins.forEach((coin) => {\r\n                value += coin.number * coin.price;\r\n                fiatValue += coin.number * coin.price * fiatPrice;\r\n            });\r\n\r\n            let netvalue = 0;\r\n            day.coins.forEach((coin) => {\r\n                // Skip coins that are not in current portfolio\r\n                if (dayOne.find(c => c.coin === coin.coin)) {\r\n                    if (dayOne.find(c => c.coin === coin.coin).initial === 0) dayOne.find(c => c.coin === coin.coin).initial = coin.number;\r\n                    netvalue += dayOne.find(c => c.coin === coin.coin).initial * coin.price;\r\n                }\r\n            })\r\n            values.push({\r\n                x: day.date,\r\n                y: value,\r\n            });\r\n            change.push({\r\n                x: day.date,\r\n                y: (value / initialValue - 1) * 100,\r\n            });\r\n            fiatValues.push({\r\n                x: day.date,\r\n                y: fiatValue,\r\n            });\r\n            fiatChange.push({\r\n                x: day.date,\r\n                y: (fiatValue / initialFiatValue - 1) * 100,\r\n            });\r\n            netvalues.push({\r\n                x: day.date,\r\n                y: value - netvalue,\r\n            });\r\n            netchange.push({\r\n                x: day.date,\r\n                y: ((value - netvalue) / initialValue) * 100,\r\n            });\r\n        });\r\n    }\r\n\r\n    if (type === 'btc') {\r\n        data1 = [\r\n            {\r\n                id: 'Total Value (BTC)',\r\n                data: values,\r\n            }\r\n        ];\r\n        data2 = [\r\n            {\r\n                id: 'Total Change (%)',\r\n                data: change,\r\n            }\r\n        ];\r\n    } else if (type === 'fiat') {\r\n        title = title.replace('Fiat', `${fiat}`);\r\n        data1 = [\r\n            {\r\n                id: `Total Value (${fiat})`,\r\n                data: fiatValues,\r\n            }\r\n        ];\r\n        data2 = [\r\n            {\r\n                id: 'Total Change (%)',\r\n                data: fiatChange,\r\n            }\r\n        ];\r\n    } else {\r\n        data1 = [\r\n            {\r\n                id: 'Net Balancing Result (BTC)',\r\n                data: netvalues,\r\n            }\r\n        ];\r\n        data2 = [\r\n            {\r\n                id: 'Net Balancing Result (%)',\r\n                data: netchange,\r\n            }\r\n        ];\r\n    }\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            crosshair: {\r\n                line: {\r\n                    stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                },\r\n            }\r\n        };\r\n    };\r\n\r\n    const getAxis1 = () => {\r\n        return {\r\n            legend: data1[0].id,\r\n            legendOffset: -80,\r\n            legendPosition: 'middle',\r\n        }\r\n    }\r\n\r\n    const getAxis2 = () => {\r\n        return {\r\n            legend: data2[0].id,\r\n            legendOffset: 70,\r\n            legendPosition: 'middle',\r\n        }\r\n    }\r\n\r\n    function uniq(a) {\r\n        var seen = {};\r\n        return a.filter(function (item) {\r\n            return seen.hasOwnProperty(item) ? false : (seen[item] = true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{title}</b></div>\r\n            <div className=\"secondGraph\">\r\n                <ResponsiveLine\r\n                    data={data1}\r\n                    sliceTooltip={({ slice }) => {\r\n                        let background = (mode === 'light') ? \"#FFFFFF\" : \"#000000\";\r\n                        let color = (mode === 'light') ? \"#000000\" : \"#FFFFFF\";\r\n                        return (\r\n                            <div\r\n                                style={{\r\n                                    background: background,\r\n                                    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n                                    padding: '9px 12px',\r\n                                }}\r\n                            >\r\n                                {/* <div>x: {slice.id}</div> */}\r\n                                {uniq(slice.points).map(point => (\r\n                                    <div\r\n                                        key={point.id}\r\n                                        style={{\r\n                                            color: color,\r\n                                            padding: '3px 0',\r\n                                        }}\r\n                                    >\r\n                                        {point.serieId} <strong>{point.data.yFormatted}</strong>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                    }}\r\n                    theme={getTheme()}\r\n                    margin={{ top: 40, right: 90, bottom: 50, left: 90 }}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%Y/%m/%d',\r\n                        useUTC: false,\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%Y/%m/%d\"\r\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                    yFormat=\" >-.6f\"\r\n                    curve=\"monotoneX\"\r\n                    colors={['rgb(255,255,255,0)']}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={null}\r\n                    axisLeft={getAxis1()}\r\n                    enablePoints={false}\r\n                    enableGridX={false}\r\n                    enableGridY={false}\r\n                    // useMesh={true}\r\n                    enableSlices=\"y\"\r\n                    crosshairType=\"y\"\r\n                />\r\n            </div>\r\n            <div className=\"graphContainer\">\r\n                <ResponsiveLine\r\n                    data={data2}\r\n                    theme={getTheme()}\r\n                    margin={{ top: 40, right: 90, bottom: 50, left: 90 }}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%Y/%m/%d',\r\n                        useUTC: false,\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%Y/%m/%d\"\r\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                    yFormat=\" >-.6f\"\r\n                    curve=\"monotoneX\"\r\n                    lineWidth={4}\r\n                    colors={['rgb(211,47,47)']}\r\n                    axisTop={null}\r\n                    axisBottom={null}\r\n                    axisRight={getAxis2()}\r\n                    axisLeft={null}\r\n                    enablePoints={false}\r\n                    enableGridX={false}\r\n                    enableGridY={false}\r\n                    // useMesh={true}\r\n                    enableSlices=\"y\"\r\n                    crosshairType=\"y\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ResponsiveLine } from '@nivo/line'\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n\r\n    let performance = props.performance;\r\n    const balances = props.balances;\r\n    const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    let coins = [];\r\n    let data = [];\r\n    let prices = [];\r\n\r\n    rows.forEach((coin, i) => {\r\n        coins.push(coin.coin);\r\n        prices[i] = {\r\n            coin: coin.coin,\r\n            initial: 0,\r\n            data: [],\r\n        };\r\n    });\r\n\r\n    if (performance !== []) {\r\n        coins.forEach((coin, i) => {\r\n            if (coin !== 'BTC') {\r\n                performance.forEach((day) => {\r\n                    day.coins.forEach((c) => {\r\n                        if (c.coin === coin) {\r\n                            if (prices[i].initial === 0) prices[i].initial = c.price;\r\n                            prices[i].data.push({\r\n                                x: day.date,\r\n                                y: (c.price / prices[i].initial - 1) * 100,\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                data.push({\r\n                    id: coin,\r\n                    data: prices[i].data,\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            crosshair: {\r\n                line: {\r\n                    stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                },\r\n            },\r\n            legends: {\r\n                text: {\r\n                    fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                }\r\n            },\r\n        };\r\n    };\r\n\r\n    function uniq(a) {\r\n        var seen = {};\r\n        return a.filter(function (item) {\r\n            return seen.hasOwnProperty(item) ? false : (seen[item] = true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{props.title}</b></div>\r\n            <div className=\"graphContainer\">\r\n                <ResponsiveLine\r\n                    data={data}\r\n                    sliceTooltip={({ slice }) => {\r\n                        let background = (mode === 'light') ? \"#FFFFFF\" : \"#000000\";\r\n                        return (\r\n                            <div\r\n                                style={{\r\n                                    background: background,\r\n                                    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n                                    padding: '9px 12px',\r\n                                }}\r\n                            >\r\n                                {/* <div>x: {slice.id}</div> */}\r\n                                {uniq(slice.points).map(point => (\r\n                                    <div\r\n                                        key={point.id}\r\n                                        style={{\r\n                                            color: point.serieColor,\r\n                                            padding: '3px 0',\r\n                                        }}\r\n                                    >\r\n                                        {point.serieId} <strong>{point.data.yFormatted}%</strong>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                    }}\r\n                    theme={getTheme()}\r\n                    margin={{ top: 50, right: 110, bottom: 50, left: 80 }}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%Y/%m/%d',\r\n                        useUTC: false,\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%Y/%m/%d\"\r\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                    yFormat=\" >-.2f\"\r\n                    curve=\"monotoneX\"\r\n                    lineWidth={4}\r\n                    colors={{ scheme: 'red_yellow_blue' }}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={null}\r\n                    axisLeft={{\r\n                        legend: 'Change (%)',\r\n                        legendOffset: -70,\r\n                        legendPosition: 'middle',\r\n                    }}\r\n                    enablePoints={false}\r\n                    enableGridX={false}\r\n                    enableGridY={false}\r\n                    // useMesh={true}\r\n                    enableSlices=\"y\"\r\n                    crosshairType=\"y\"\r\n                    legends={[\r\n                        {\r\n                            anchor: 'bottom-right',\r\n                            direction: 'column',\r\n                            justify: false,\r\n                            translateX: 100,\r\n                            translateY: 0,\r\n                            itemsSpacing: 0,\r\n                            itemDirection: 'left-to-right',\r\n                            itemWidth: 80,\r\n                            itemHeight: 20,\r\n                            itemOpacity: 0.75,\r\n                            symbolSize: 12,\r\n                            symbolShape: 'circle',\r\n                            symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                            itemTextColor: \"#ff0000\",\r\n                            effects: [\r\n                                {\r\n                                    on: 'hover',\r\n                                    style: {\r\n                                        itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                        itemOpacity: 1\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const PerformanceContext = createContext();\r\n\r\nexport const PerformanceProvider = (props) => {\r\n    const [performance, setPerformance] = useState([]);\r\n\r\n    return (\r\n        <PerformanceContext.Provider value={[performance, setPerformance]}>\r\n            {props.children}\r\n        </PerformanceContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport StatusView from \"../components/StatusView\";\r\nimport LineChart from '../components/LineChart';\r\nimport LineChartCoins from '../components/LineChartCoins';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Performance = () => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const performance = useContext(PerformanceContext)[0];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Performance\r\n        </Typography>\r\n        </Grid>\r\n        {/* <Grid item xs={2}></Grid> */}\r\n        <Grid item xs={4}>\r\n          <TimelineView data={performance} />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart performance={performance} balances={balances} type={'btc'} title={'Portfolio Value (BTC)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart performance={performance} balances={balances} type={'fiat'} title={'Portfolio Value (Fiat)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart performance={performance} balances={balances} type={'net-result'} title={'Net Balancing Result (BTC)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChartCoins performance={performance} balances={balances} title={'Coin BTC Price Changes (%)'} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Performance;","import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    errortext: {\r\n        color: \"#ff0000\",\r\n    },\r\n}));\r\n\r\nexport default function HistoryTable() {\r\n    const classes = useStyles();\r\n\r\n    let [eventdata, setEventdata] = useState({\r\n        rows: [],\r\n        total: 0,\r\n    });\r\n\r\n    let [filter, setFilter] = useState({\r\n        type: ['order', 'error'],\r\n        event: '',\r\n        page: '1',\r\n    });\r\n\r\n    let [history, setHistory] = useState({\r\n        logs: [],\r\n        total: 0,\r\n    });\r\n\r\n    const handleHistoryChange = (hist) => {\r\n        let rows = []\r\n        hist.logs.reverse().forEach((log) => {\r\n            rows.push({\r\n                time: log.time,\r\n                type: log.type,\r\n                event: log.event,\r\n            });\r\n        });\r\n        setEventdata({\r\n            rows: rows,\r\n            total: hist.total,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleHistoryChange(history);\r\n\r\n        return () => {\r\n        }\r\n    }, [history]);\r\n\r\n\r\n    const handleEvent = (log, summary) => {\r\n        if (socket) socket.emit(\"get-logs\", filter);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on('event-history', (logs, total) => {\r\n            setHistory({\r\n                logs: logs,\r\n                total: total,\r\n            });\r\n        });\r\n        socket.on('event', function (log, summary) {\r\n            handleEvent(log, summary);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('event-history');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socket) socket.emit(\"get-logs\", filter);\r\n        return () => {\r\n        }\r\n    }, [filter]);\r\n\r\n    const handlePage = (event, newPage) => {\r\n        setFilter({\r\n            type: filter.type,\r\n            event: filter.event,\r\n            page: newPage,\r\n        });\r\n    };\r\n\r\n    const handleTypeFilter = (event, newTypes) => {\r\n        setFilter({\r\n            type: newTypes,\r\n            event: filter.event,\r\n            page: filter.page,\r\n        });\r\n    };\r\n\r\n    const handleEventFilter = (e) => {\r\n        setFilter({\r\n            type: filter.type,\r\n            event: e.target.value,\r\n            page: filter.page,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Paper pt={2}>\r\n            <Grid container style={{ height: '60px' }} alignItems=\"center\">\r\n                <Box p={1}>\r\n                    <Grid item xs={3}>\r\n                        <ToggleButtonGroup value={filter.type} onChange={handleTypeFilter} aria-label=\"type selection\">\r\n                            <ToggleButton value=\"order\" aria-label=\"order\" style={{ height: '30px' }} >\r\n                                <Typography variant=\"overline\" noWrap>\r\n                                    Orders\r\n                                </Typography>\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"error\" aria-label=\"error\" style={{ height: '30px' }} >\r\n                                <Typography variant=\"overline\" noWrap>\r\n                                    Errors\r\n                                </Typography>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Grid>\r\n                </Box>\r\n                <Grid item xs={2}>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <TextField id=\"event-filter\" label=\"Filter events\" color=\"secondary\" onChange={handleEventFilter} />\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={7}></Grid>\r\n            </Grid>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell style={{ width: '170px' }}>Time</StyledTableCell>\r\n                            <StyledTableCell>Event</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {eventdata.rows.map((row) => (\r\n                            <StyledTableRow key={row.time + row.event}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"caption\">{row.time}</Typography>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    {(row.type === 'error') ? (\r\n                                        <Typography variant=\"body2\" className={classes.errortext}>{row.event}</Typography>\r\n                                    ) : (\r\n                                        <Typography variant=\"body2\">{row.event}</Typography>\r\n                                    )}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" >\r\n                <Pagination count={Math.ceil(eventdata.total / 20)} shape=\"rounded\" onChange={handlePage} />\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HistoryTable from \"../components/HistoryTable\";\r\nimport StatusView from '../components/StatusView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EventHistory = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Event History\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <HistoryTable />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default EventHistory;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function AddressForm() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Exchange API Details\r\n      </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"apiKey\"\r\n                        name=\"apiKey\"\r\n                        label=\"API Key\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"apiSecret\"\r\n                        name=\"apiSecret\"\r\n                        label=\"API Secret\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function AddressForm() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n      </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"First name\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Last name\"\r\n                        fullWidth\r\n                        autoComplete=\"family-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"address1\"\r\n                        name=\"address1\"\r\n                        label=\"Address line 1\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-line1\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"address2\"\r\n                        name=\"address2\"\r\n                        label=\"Address line 2\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-line2\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-level2\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"zip\"\r\n                        name=\"zip\"\r\n                        label=\"Zip / Postal code\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping postal-code\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        label=\"Country\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping country\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                        label=\"Use this address for payment details\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function AddressForm() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                General Settings\r\n      </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"botName\"\r\n                        name=\"botName\"\r\n                        label=\"Bot Name\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"threshold\"\r\n                        name=\"threshold\"\r\n                        label=\"Balancing Threshold (%)\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"headless\" value=\"yes\" />}\r\n                        label=\"Run bot in headless mode\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfigP1 from './ConfigP1';\r\nimport ConfigP2 from './ConfigP2';\r\nimport ConfigP3 from './ConfigP3';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: '1000px',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        // [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n        //     width: 600,\r\n        //     marginLeft: 'auto',\r\n        //     marginRight: 'auto',\r\n        // },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = ['Exchange API', 'Coin Settings', 'General Settings'];\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <ConfigP1 />;\r\n        case 1:\r\n            return <ConfigP2 />;\r\n        case 2:\r\n            return <ConfigP3 />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\nexport default function ConfigMain() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Configuration has been saved\r\n                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You can now leave this page\r\n                </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {getStepContent(activeStep)}\r\n                                <div className={classes.buttons}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} className={classes.button}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? 'Save Configuation' : 'Next'}\r\n                                    </Button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfigMain from \"../components/ConfigMain\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst Configuration = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Configuration\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ConfigMain />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Configuration;","import PieChartIcon from '@material-ui/icons/PieChart';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Portfolio from '../pages/Portfolio';\r\nimport PPerformance from '../pages/PPerformance';\r\nimport EventHistory from '../pages/EventHistory';\r\nimport Configuration from '../pages/Configuration';\r\n\r\nconst routesUp = [\r\n  {\r\n    path: '/',\r\n    sidebarName: 'Portfolio',\r\n    navbarName: 'Portfolio',\r\n    icon: PieChartIcon,\r\n    component: Portfolio,\r\n  },\r\n  {\r\n    path: '/performance',\r\n    sidebarName: 'Performance',\r\n    navbarName: 'Performance',\r\n    icon: ShowChartIcon,\r\n    component: PPerformance,\r\n  },\r\n  {\r\n    path: '/history',\r\n    sidebarName: 'Event History',\r\n    navbarName: 'Event History',\r\n    icon: HistoryIcon,\r\n    component: EventHistory,\r\n  },\r\n];\r\n\r\nconst routesDown = [\r\n  {\r\n    path: '/configuration',\r\n    sidebarName: 'Configuration',\r\n    navbarName: 'Configuration',\r\n    icon: SettingsIcon,\r\n    component: Configuration,\r\n  }\r\n];\r\n\r\nexport { routesUp, routesDown };","import React, { useContext } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link, Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport DMSwitch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\nimport { FiatContext } from '../context/FiatContext';\r\n\r\nimport { routesUp, routesDown } from '../routes/Routes';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  logo: {\r\n    maxWidth: 60,\r\n    padding: 10,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    height: '100%',\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    justify: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Main() {\r\n  const [mode, setMode] = useLocalStore('mode', 'light');\r\n  const setFiatStore = useLocalStore('fiat', 'EUR')[1];\r\n  const [fiat, setFiat] = useContext(FiatContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDarkmode = (e) => {\r\n    (mode === 'light') ? setMode('dark') : setMode('light');\r\n  }\r\n\r\n  const handleFiat = (e) => {\r\n    if (fiat === 'EUR') {\r\n      setFiat('USD');\r\n      setFiatStore('USD');\r\n    } else {\r\n      setFiat('EUR');\r\n      setFiatStore('EUR');\r\n    }\r\n  }\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: mode\r\n    }\r\n  });\r\n\r\n  const StyledButton = withStyles({\r\n    root: {\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      '&:click': {\r\n        backgroundColor: '#f00',\r\n      },\r\n    },\r\n  })(Button);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <img src=\"/logo192.png\" alt=\"Balance-Bot Logo\" className={classes.logo} />\r\n              <Typography variant=\"h6\" noWrap>\r\n                Balance Bot\r\n          </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer className={classes.drawer} variant=\"permanent\">\r\n            <Paper className={classes.drawerPaper}>\r\n              <Grid container direction=\"column\">\r\n                <Grid item xs={12}>\r\n                  <Toolbar />\r\n                  <div className={classes.drawerContainer}>\r\n                    <List>\r\n                      {routesUp.map((prop, key) => {\r\n                        return (\r\n                          <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                            <ListItem button key={prop.sidebarName}>\r\n                              <ListItemIcon><prop.icon /></ListItemIcon>\r\n                              <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                            </ListItem>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                    <Divider />\r\n                    {routesDown.map((prop, key) => {\r\n                      return (\r\n                        <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                          <ListItem button key={prop.sidebarName}>\r\n                            <ListItemIcon><prop.icon /></ListItemIcon>\r\n                            <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                          </ListItem>\r\n                        </Link>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </Grid>\r\n                <Box pt={10}></Box>\r\n                <Divider />\r\n                <Box pt={1} pl={4}>\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      onChange={handleDarkmode}\r\n                      value={mode}\r\n                      control={<DMSwitch checked={mode === 'dark'} color=\"secondary\" />}\r\n                      label={<Typography variant=\"button\">Dark Mode</Typography>}\r\n                      labelPlacement=\"start\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid container item xs={12} alignItems=\"center\">\r\n                    <Grid item xs={6}>\r\n                      <FormControlLabel\r\n                        onChange={handleFiat}\r\n                        value={fiat}\r\n                        control={<DMSwitch checked={fiat === 'EUR'} color=\"secondary\" />}\r\n                        label={<Typography variant=\"button\">USD</Typography>}\r\n                        labelPlacement=\"start\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <StyledButton disableRipple onClick={handleFiat}><Typography variant=\"button\">EUR</Typography></StyledButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Grid>\r\n            </Paper>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            <Switch>\r\n              {routesUp.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n              {routesDown.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}","import { useEffect, useContext } from \"react\";\r\nimport { useSnackbar } from 'notistack';\r\nimport { socket } from '../context/SocketContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nexport default function SocketService() {\r\n    let [{ status, updated }, setServer] = useContext(ServerContext);\r\n    const [balances, setBalances] = useContext(BalancesContext);\r\n    const [performance, setPerformance] = useContext(PerformanceContext);\r\n    const setStartingBalance = useContext(StartingBalanceContext)[1];\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleEvent = (log, summary) => {\r\n        const variant = (log.type === 'error') ? 'error' : 'success';\r\n        enqueueSnackbar(summary, {\r\n            variant: variant,\r\n            autoHideDuration: 8000,\r\n        });\r\n    };\r\n\r\n    const updatePerformance = () => {\r\n        const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n        let update = [];\r\n\r\n        rows.forEach((coin) => {\r\n            update.push({\r\n                coin: coin.coin,\r\n                number: coin.number,\r\n                price: coin.last,\r\n            });\r\n        });\r\n        if (performance.length !== 0) {\r\n            if (performance[performance.length - 1].date === getDate()) {\r\n                let newPerformance = [...performance];\r\n                newPerformance[newPerformance.length - 1].coins = update;\r\n                newPerformance[newPerformance.length - 1].eur = balances.eur;\r\n                newPerformance[newPerformance.length - 1].usd = balances.usd;\r\n                setPerformance(newPerformance);\r\n            } else {\r\n                // It's a new day\r\n                // console.log(getTimeStamp() + ' | get-performance');\r\n                if (socket) socket.emit(\"get-performance\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const getDate = () => {\r\n        const now = new Date();\r\n\r\n        return now.getFullYear() + \"/\" + (now.getMonth() + 1).toString().padStart(2, '0') + \"/\" + now.getDate().toString().padStart(2, '0');\r\n    }\r\n\r\n    function getTimeStamp() {\r\n        const now = new Date();\r\n\r\n        return now.getFullYear() + \"/\" + (now.getMonth() + 1).toString().padStart(2, '0') + \"/\" + now.getDate().toString().padStart(2, '0') + \" \" + now.getHours().toString().padStart(2, '0') + \":\" + now.getMinutes().toString().padStart(2, '0') + \":\" + now.getSeconds().toString().padStart(2, '0');\r\n    }\r\n\r\n    const handleBalances = (sb) => {\r\n        setStartingBalance(sb);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updatePerformance();\r\n        return () => {\r\n        }\r\n    }, [balances]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"status\", data => {\r\n            setServer({\r\n                status: data,\r\n                updated: updated,\r\n            });\r\n        });\r\n        socket.on(\"balances\", data => {\r\n            setBalances(data);\r\n            setServer({\r\n                status: 'connected',\r\n                updated: data.time,\r\n            });\r\n        });\r\n        socket.on('performance', (logs) => {\r\n            // console.log(getTimeStamp() + ' | ', logs);\r\n            setPerformance(logs);\r\n        });\r\n        socket.on('starting-balances', (sb) => {\r\n            handleBalances(sb);\r\n        });\r\n        socket.on('event', function (log, summary) {\r\n            handleEvent(log, summary);\r\n        });\r\n        socket.on(\"disconnect\", data => {\r\n            setServer({\r\n                status: 'disconnected',\r\n                updated: updated,\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        }\r\n    }, []);\r\n\r\n    return (null);\r\n}","import './App.css';\nimport Main from './pages/Main';\nimport { ServerProvider } from './context/ServerContext';\nimport { BalancesProvider } from './context/BalancesContext';\nimport { PerformanceProvider } from './context/PerformanceContext';\nimport { StartingBalanceProvider } from './context/StartingBalanceContext';\nimport { FiatProvider } from './context/FiatContext';\nimport { SnackbarProvider } from 'notistack';\nimport SocketService from './services/SocketService';\nimport { CssBaseline } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <SnackbarProvider maxSnack={5}>\n      <ServerProvider>\n        <BalancesProvider>\n          <PerformanceProvider>\n            <StartingBalanceProvider>\n              <FiatProvider>\n                <SocketService />\n                <CssBaseline />\n                <Main />\n              </FiatProvider>\n            </StartingBalanceProvider>\n          </PerformanceProvider>\n        </BalancesProvider>\n      </ServerProvider>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}