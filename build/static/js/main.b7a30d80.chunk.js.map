{"version":3,"sources":["services/LocalStoreService.js","context/FiatContext.js","context/ConfigurationContext.js","context/ServerContext.js","components/BalancesTable.js","components/PieChart.js","context/SocketContext.js","context/BalancesContext.js","context/PerformanceContext.js","components/StatusView.js","components/TimelineView.js","context/StartingBalanceContext.js","components/PerformanceSummary.js","pages/Portfolio.js","components/LineChart.js","pages/PPerformance.js","components/LineChartCoins.js","pages/CoinAnalysis.js","components/HistoryTable.js","pages/EventHistory.js","context/ConfigurationInputContext.js","components/HtmlToolTip.js","components/ConfigP1.js","components/ConfigP2.js","components/ConfigP3.js","components/ConfigP4.js","components/ConfigMain.js","pages/Configuration.js","routes/Routes.js","pages/Main.js","services/SocketService.js","App.js","index.js"],"names":["useLocalStore","localStorageKey","defaultValue","React","useState","localStorage","getItem","value","setValue","useEffect","setItem","FiatContext","createContext","FiatProvider","props","fiatStore","fiat","setFiat","Provider","children","ConfigurationContext","ConfigurationProvider","configuration","setConfiguration","ServerContext","ServerProvider","status","updated","server","setServer","headCells","id","align","disablePadding","label","useTableHeadStyles","makeStyles","theme","headcolor","palette","type","backgroundColor","EnhancedTableHead","checkbox","onSelectAllClick","numSelected","rowCount","headless","classes","Checkbox","indeterminate","checked","onChange","inputProps","TableHead","TableRow","className","TableCell","padding","map","headCell","TableSortLabel","useToolbarStyles","root","paddingLeft","spacing","paddingRight","highlight","color","secondary","main","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","selected","portfolio","handleOrder","setSelected","length","Toolbar","clsx","Typography","variant","component","join","Button","style","width","startIcon","onClick","selectedCoins","i","selectedCoin","find","coin","push","useStyles","paper","marginBottom","table","minWidth","paddingTop","paddingBottom","visuallyHidden","border","clip","height","margin","overflow","position","top","formatResult","num","dec","parseFloat","toFixed","BalancesTable","useTheme","balances","threshold","onOrder","rows","JSON","parse","Paper","TableContainer","Table","size","aria-labelledby","aria-label","event","newSelecteds","n","filter","TableBody","row","index","isItemSelected","indexOf","labelId","sidechip","sidelabel","side","reverse","distribution","target","Chip","error","disabled","success","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","scope","number","last","trade","PieChart","mode","data","tooltip","container","background","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextColor","radialLabelsLinkColor","sliceLabelsSkipAngle","sliceLabelsTextColor","socket","socketio","BalancesContext","BalancesProvider","setBalances","PerformanceContext","PerformanceProvider","performance","setPerformance","flexGrow","StatusView","statuschip","useContext","Grid","alignItems","item","xs","stepper","TimelineView","numdays","startdate","date1","add","Date","date","days","date2","now","adjusted","timeshift","hours","shiftedDate","timeDiff","getTime","console","log","Math","round","getFullYear","getMonth","toString","padStart","getDate","Stepper","alternativeLabel","activeStep","connector","ColorlibConnector","Step","StepLabel","StepIconComponent","ColorlibStepIcon","withStyles","active","backgroundImage","completed","line","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","display","justifyContent","boxShadow","icons","1","2","String","icon","StartingBalanceContext","StartingBalanceProvider","startingBalance","setStartingBalance","performanceSummary","setPerformanceSummary","currency","leftTxt","rightTxt","change","currentValue","forEach","eur","usd","btc","netvalue","coins","c","direction","Portfolio","emit","noWrap","LineChart","data1","values","fiatValues","fiatChange","netvalues","netchange","netvaluesfiat","netchangefiat","data2","dayOne","initial","initialValue","initialFiatValue","day","fiatPrice","fiatValue","price","netvaluefiat","x","y","replace","getTheme","axis","ticks","stroke","fill","legend","crosshair","uniq","a","seen","hasOwnProperty","sliceTooltip","points","point","serieId","yFormatted","xScale","format","useUTC","precision","xFormat","yScale","min","max","stacked","yFormat","curve","axisTop","axisRight","axisBottom","axisLeft","legendOffset","legendPosition","enablePoints","enableGridX","enableGridY","enableSlices","crosshairType","lineWidth","Performance","prices","serieColor","legends","anchor","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","itemTextColor","effects","on","itemBackground","CoinAnalysis","StyledTableCell","head","common","black","white","body","fontSize","StyledTableRow","action","errortext","HistoryTable","total","eventdata","setEventdata","page","setFilter","logs","history","setHistory","hist","time","handleHistoryChange","summary","off","pt","Box","p","ToggleButtonGroup","newTypes","ToggleButton","noValidate","autoComplete","TextField","e","Pagination","count","ceil","shape","newPage","EventHistory","ConfigurationInputContext","ConfigurationInputProvider","configurationInput","setConfigurationInput","HtmlTooltip","maxWidth","typography","pxToRem","Tooltip","ConfigP1","input","apiKey","setApiKey","apiSecret","setApiSecret","onInput","callback","field","Fragment","gutterBottom","required","name","fullWidth","iOSBoxShadow","MySlider","thumb","marginTop","marginLeft","valueLabel","track","rail","opacity","mark","markActive","Slider","marks","headheight","cell","cell2","ConfigP2","newPortfolio","setPortfolio","portfolioReceived","setPortfolioReceived","excluded","numCoins","match","slider","prevState","handleSlider","select","maxSlider","totalSlider","numSlider","remainingSlider","numCoinsZero","labelFormatter","elevation","isSelected","step","valueLabelDisplay","valueLabelFormat","Skeleton","animation","columns","headerName","editable","valueFormatter","Number","header","ConfigP3","newStartPerformance","selectedDate","setSelectedDate","recreate","setRecreate","startPerformance","handleDateChange","handleCheck","CustomToolbar","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","FormControlLabel","control","autoHeight","density","disableColumnSelector","disableColumnMenu","hideFooter","hideFooterPagination","hideFooterRowCount","onEditCellChangeCommitted","formControl","selectEmpty","textinput","ConfigP4","newBotname","botname","newThreshold","newTimeshift","newHeadless","newRunning","running","setBotname","setThreshold","setTimeshift","setHeadless","getHour","shift","current","getHours","getMinutes","currenttime","newtime","setNewtime","helperText","test","FormControl","InputLabel","Select","MenuItem","FormHelperText","layout","marginRight","breakpoints","up","buttons","button","steps","ConfigMain","enqueueSnackbar","useSnackbar","setActiveStep","setInput","handleInput","newInput","getPortfolio","storeConfiguration","CssBaseline","Error","getStepContent","autoHideDuration","Configuration","routesUp","path","sidebarName","PieChartIcon","BarChartIcon","PPerformance","ShowChartIcon","HistoryIcon","routesDown","SettingsIcon","appBar","drawer","logo","flexShrink","drawerPaper","drawerContainer","content","backdrop","Main","setMode","setFiatStore","open","setOpen","Object","keys","handleFiat","createMuiTheme","StyledButton","ThemeProvider","Backdrop","CircularProgress","AppBar","src","alt","Drawer","List","prop","key","to","textDecoration","ListItem","ListItemIcon","ListItemText","primaryTypographyProps","Divider","pl","labelPlacement","disableRipple","exact","SocketService","updatePerformance","update","newPerformance","getSeconds","getTimeStamp","config","sb","handleEvent","disconnect","App","maxSnack","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7a30d80.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const useLocalStore = (localStorageKey, defaultValue) => {\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(localStorageKey) || defaultValue\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n\r\n  return [value, setValue];\r\n};","import React, { useState, createContext } from 'react';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\n\r\nexport const FiatContext = createContext();\r\n\r\nexport const FiatProvider = (props) => {\r\n    const fiatStore = useLocalStore('fiat', 'EUR')[0];\r\n    const [fiat, setFiat] = useState(fiatStore);\r\n\r\n    return (\r\n        <FiatContext.Provider value={[fiat, setFiat]}>\r\n            {props.children}\r\n        </FiatContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const ConfigurationContext = createContext();\r\n\r\nexport const ConfigurationProvider = (props) => {\r\n    const [configuration, setConfiguration] = useState({});\r\n\r\n    return (\r\n        <ConfigurationContext.Provider value={[configuration, setConfiguration]}>\r\n            {props.children}\r\n        </ConfigurationContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const ServerContext = createContext();\r\n\r\nexport const ServerProvider = (props) => {\r\n    const [server, setServer] = useState({\r\n        status: 'disconnected',\r\n        updated: '---',\r\n    });\r\n\r\n    return (\r\n        <ServerContext.Provider value={[server, setServer]}>\r\n            {props.children}\r\n        </ServerContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst headCells = [\r\n    { id: 'coin', align: 'left', disablePadding: true, label: 'Coin' },\r\n    { id: 'amount', align: 'right', disablePadding: false, label: 'Amount' },\r\n    { id: 'price', align: 'right', disablePadding: false, label: 'BTC Price' },\r\n    { id: 'value', align: 'right', disablePadding: false, label: 'BTC Value' },\r\n    { id: 'distribution', align: 'right', disablePadding: false, label: 'Distribution %' },\r\n    { id: 'target', align: 'right', disablePadding: false, label: 'Target %' },\r\n    { id: 'trade', align: 'right', disablePadding: false, label: 'Trade' },\r\n    { id: 'side', align: 'right', disablePadding: false, label: 'Order Side' },\r\n];\r\n\r\nconst useTableHeadStyles = makeStyles((theme) => ({\r\n    headcolor:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                backgroundColor: '#aaaaaa',\r\n            }\r\n            : {\r\n                backgroundColor: '#777777',\r\n            },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, numSelected, rowCount, headless } = props;\r\n    const classes = useTableHeadStyles();\r\n\r\n    let checkbox;\r\n    if (!headless) {\r\n        checkbox = <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select coins' }}\r\n        />\r\n    } else {\r\n        checkbox = null;\r\n    }\r\n    return (\r\n        <TableHead>\r\n            {/* <TableRow style={{ backgroundColor: '#cccccc' }}> */}\r\n            <TableRow className={classes.headcolor}>\r\n                <TableCell padding=\"checkbox\">\r\n                    {checkbox}\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                    >\r\n                        <TableSortLabel>\r\n                            {headCell.label}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { selected, headless, portfolio, handleOrder, setSelected } = props;\r\n    const numSelected = selected.length;\r\n\r\n    function onOrder() {\r\n        setSelected([]);\r\n        let selectedCoins = [];\r\n        for (let i = 0; i < selected.length; i++) {\r\n            let selectedCoin = portfolio.find(({ coin }) => coin === selected[i]);\r\n            if (selectedCoin.coin !== 'BTC') selectedCoins.push(selectedCoin);\r\n        }\r\n\r\n        handleOrder(selectedCoins);\r\n    }\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} {(numSelected === 1) ? 'coin' : 'coins'} selected: {selected.join()}\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"subtitle1\" id=\"tableTitle\" component=\"div\">\r\n                    {(!headless) ? ('Select coins to manually submit order') : ('Running in automatic mode')}\r\n                </Typography>\r\n            )}\r\n\r\n            {(numSelected > 0) && (\r\n                <Button variant=\"contained\" color=\"secondary\" style={{ width: '220px' }} startIcon={<BackupIcon />} onClick={onOrder}>\r\n                    Submit Order\r\n                </Button>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    selected: PropTypes.array.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n    portfolio: PropTypes.array.isRequired,\r\n    handleOrder: PropTypes.func.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n        \"& .MuiTableCell-sizeSmall\": {\r\n            paddingTop: \"9px\",\r\n            paddingBottom: \"9px\",\r\n        }\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nfunction formatResult(num, dec) {\r\n    return parseFloat(num.toFixed(dec));\r\n}\r\n\r\nexport default function BalancesTable(props) {\r\n    const classes = useStyles();\r\n    const [selected, setSelected] = React.useState([]);\r\n    const theme = useTheme();\r\n    const balances = props.balances;\r\n    const threshold = balances.threshold;\r\n    const headless = balances.headless || false;\r\n    const handleOrder = props.onOrder;\r\n\r\n    let rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (selected.length === 0) {\r\n            const newSelecteds = rows.map((n) => n.coin).filter(coin => coin !== 'BTC');\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, coin) => {\r\n        if (!headless && coin !== 'BTC') {\r\n            const selectedIndex = selected.indexOf(coin);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, coin);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n        }\r\n    };\r\n\r\n    const isSelected = (coin) => selected.indexOf(coin) !== -1;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar selected={selected} headless={headless} portfolio={rows} handleOrder={handleOrder} setSelected={setSelected} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        size=\"small\"\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            rowCount={rows.length}\r\n                            headless={headless}\r\n                        />\r\n                        <TableBody>\r\n                            {rows.map((row, index) => {\r\n                                const isItemSelected = isSelected(row.coin);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n                                let sidechip = <div style={{ color: '#999999', width: '120px' }}>-</div>;\r\n                                let sidelabel = row.side;\r\n                                if (row.reverse) sidelabel += ' (reverse)';\r\n\r\n                                if (row.side === 'sell') {\r\n                                    if (row.distribution / row.target - 1 >= threshold / 100) {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '120px' }} />\r\n                                    } else {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                    }\r\n                                } else if (row.side === 'buy') {\r\n                                    if (row.distribution / row.target - 1 <= -threshold / 100) {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '120px' }} />\r\n                                    } else {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                    }\r\n                                }\r\n\r\n                                let checkbox;\r\n                                if (!headless && row.coin !== 'BTC') {\r\n                                    checkbox = <Checkbox\r\n                                        checked={isItemSelected}\r\n                                        inputProps={{ 'aria-labelledby': labelId }}\r\n                                    />\r\n                                } else {\r\n                                    checkbox = null;\r\n                                }\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        onClick={(event) => handleClick(event, row.coin)}\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={row.coin}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            {checkbox}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                            {row.coin}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.number}</TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.last, 8)}</TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.value, 8)}</TableCell>\r\n                                        <TableCell align=\"right\">{row.distribution}</TableCell>\r\n                                        <TableCell align=\"right\">{row.target}</TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.trade, 8)}</TableCell>\r\n                                        <TableCell align=\"right\">{sidechip}</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import { ResponsivePie } from '@nivo/pie';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function PieChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    const balances = props.balances;\r\n\r\n    const portfolio = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    const data = portfolio.map(function (coin) {\r\n        return {\r\n            'id': coin.coin,\r\n            'label': coin.coin,\r\n            'value': coin.distribution,\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ResponsivePie\r\n            theme={{\r\n                tooltip: {\r\n                    color: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                    container: {\r\n                        background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\"\r\n                    },\r\n                },\r\n            }}\r\n            data={data}\r\n            margin={{ top: 20, right: 80, bottom: 20, left: 80 }}\r\n            innerRadius={0.5}\r\n            padAngle={1}\r\n            cornerRadius={7}\r\n            colors={{ scheme: 'red_yellow_blue' }}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [['darker', '0.2']] }}\r\n            radialLabelsSkipAngle={10}\r\n            radialLabelsTextColor={(mode === 'light') ? \"#000000\" : \"#FFFFFF\"}\r\n            radialLabelsLinkColor={{ from: 'color' }}\r\n            sliceLabelsSkipAngle={10}\r\n            sliceLabelsTextColor={(mode === 'light') ? \"#000000\" : \"#FFFFFF\"}\r\n        />\r\n    )\r\n}","import socketio from \"socket.io-client\";\r\n\r\nexport const socket = socketio('/');","import React, { useState, createContext } from 'react';\r\n\r\nexport const BalancesContext = createContext();\r\n\r\nexport const BalancesProvider = (props) => {\r\n    const [balances, setBalances] = useState({});\r\n\r\n    return (\r\n        <BalancesContext.Provider value={[balances, setBalances]}>\r\n            {props.children}\r\n        </BalancesContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const PerformanceContext = createContext();\r\n\r\nexport const PerformanceProvider = (props) => {\r\n    const [performance, setPerformance] = useState([]);\r\n\r\n    return (\r\n        <PerformanceContext.Provider value={[performance, setPerformance]}>\r\n            {props.children}\r\n        </PerformanceContext.Provider>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { ServerContext } from '../context/ServerContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        height: '68px',\r\n        minWidth: '420px',\r\n    },\r\n}));\r\n\r\nexport default function StatusView() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { status, updated } = useContext(ServerContext)[0];\r\n\r\n    let statuschip;\r\n    if (status === 'connected') {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '90px' }} />\r\n    } else {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '110px' }} />\r\n    }\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid container item alignItems=\"center\" xs={6}>\r\n                    <Grid item xs={5}><Typography>Server status: </Typography></Grid>\r\n                    <Grid item xs={7}>{statuschip}</Grid>\r\n                </Grid>\r\n                <Grid container item alignItems=\"center\" xs={6}>\r\n                    <Grid item xs={12}><Typography>Last update: <b>{updated}</b></Typography></Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper >\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { add } from 'date-fns'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        height: '68px',\r\n        minWidth: '420px',\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport default function TimelineView(props) {\r\n    const classes = useStyles();\r\n\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n    const performance = props.data || [];\r\n    let numdays = '..';\r\n    let startdate = '----/--/--';\r\n\r\n    const shiftedDate = () => {\r\n        const now = new Date();\r\n        let adjusted = now;\r\n        if (configuration.timeshift && configuration.timeshift !== 0) adjusted = add(now, { hours: configuration.timeshift });\r\n        return adjusted;\r\n    }\r\n\r\n    if (performance.length !== 0) {\r\n        let date1 = add(new Date(performance[0].date), { days: 1 }); // Move ahead one day, as starting point is stored 'yesterday'\r\n        let date2 = shiftedDate();\r\n        var timeDiff = date2.getTime() - date1.getTime();\r\n        console.log('date1', date1)\r\n        console.log('date2', date2)\r\n        numdays = Math.round(timeDiff / (1000 * 3600 * 24));\r\n        startdate = date1.getFullYear() + \"/\" + (date1.getMonth() + 1).toString().padStart(2, '0') + \"/\" + date1.getDate().toString().padStart(2, '0');\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item xs={3}><Typography align={'right'}>Start <b>{startdate}</b></Typography></Grid>\r\n                <Grid item xs={6}>\r\n                    <Stepper className={classes.stepper} alternativeLabel activeStep={1} connector={<ColorlibConnector />}>\r\n                        <Step key={0}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}></StepLabel>\r\n                        </Step>\r\n                        <Step key={1}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}></StepLabel>\r\n                        </Step>\r\n                    </Stepper>\r\n                </Grid>\r\n                <Grid item xs={3}><Typography>Active <b>{numdays}</b> {(numdays === 1) ? 'day' : 'days'}</Typography></Grid>\r\n            </Grid>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon />,\r\n        2: <Check />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const StartingBalanceContext = createContext();\r\n\r\nexport const StartingBalanceProvider = (props) => {\r\n    const [startingBalance, setStartingBalance] = useState([]);\r\n\r\n    return (\r\n        <StartingBalanceContext.Provider value={[startingBalance, setStartingBalance]}>\r\n            {props.children}\r\n        </StartingBalanceContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nexport default function StatusView(props) {\r\n    const startingBalance = useContext(StartingBalanceContext)[0];\r\n    const [performanceSummary, setPerformanceSummary] = useState({});\r\n    const balances = props.balances;\r\n    const type = props.type;\r\n    const fiat = useContext(FiatContext)[0];\r\n    let currency = (type === 'btc') ? 'BTC' : (type === 'fiat') ? fiat : 'Net BTC';\r\n    const leftTxt = (type === 'net-result') ? 'Net change (BTC)' : `${currency} value`;\r\n    const rightTxt = (type === 'net-result') ? 'Net change (%)' : `${currency} change`;\r\n\r\n    useEffect(() => {\r\n        let rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n\r\n        let currentValue = 0;\r\n        rows.forEach((coin) => {\r\n            currentValue += coin.number * coin.last;\r\n        });\r\n\r\n        if (type === 'fiat') currentValue = currentValue * ((fiat === 'EUR') ? balances.eur : balances.usd);\r\n\r\n        let change;\r\n        if (type === 'btc') change = (currentValue / startingBalance.btc - 1) * 100;\r\n        else if (fiat === 'EUR') change = (currentValue / startingBalance.eur - 1) * 100;\r\n        else change = (currentValue / startingBalance.usd - 1) * 100;\r\n\r\n        let netvalue = 0;\r\n\r\n        if (startingBalance.coins) rows.forEach((coin) => {\r\n            let c = startingBalance.coins.find(c => c.coin === coin.coin);\r\n            if (c.coin) netvalue += c.number * coin.last;\r\n        });\r\n\r\n        if (type === 'net-result') {\r\n            change = ((currentValue - netvalue) / startingBalance.btc) * 100\r\n            currentValue = currentValue - netvalue;\r\n        }\r\n\r\n        if (change) {\r\n            if (change < 100) change = change.toFixed(2)\r\n            else if (change < 1000) change = change.toFixed(1);\r\n            else change = change.toFixed(0);\r\n        } else {\r\n            change = '0';\r\n        }\r\n        if (currentValue) {\r\n            if (currentValue < 0.1) currentValue = currentValue.toFixed(6)\r\n            else if (currentValue < 1) currentValue = currentValue.toFixed(5)\r\n            else if (currentValue < 10) currentValue = currentValue.toFixed(4)\r\n            else if (currentValue < 100) currentValue = currentValue.toFixed(3)\r\n            else if (currentValue < 1000) currentValue = currentValue.toFixed(2);\r\n            else currentValue = currentValue.toFixed(2);\r\n        } else {\r\n            currentValue = '0';\r\n        }\r\n\r\n        setPerformanceSummary({\r\n            value: currentValue,\r\n            change: change,\r\n        });\r\n    }, [balances, startingBalance, fiat]);\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\">\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h3\">{performanceSummary.value}</Typography></Grid>\r\n                <Grid item xs={12}><Typography>{leftTxt}</Typography></Grid>\r\n            </Grid>\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h3\">{performanceSummary.change}%</Typography></Grid>\r\n                <Grid item xs={12}><Typography>{rightTxt}</Typography></Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BalancesTable from \"../components/BalancesTable\";\r\nimport PieChart from \"../components/PieChart\";\r\nimport { socket } from '../context/SocketContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport StatusView from \"../components/StatusView\";\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport PerformanceSummary from \"../components/PerformanceSummary\";\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Portfolio = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const performance = useContext(PerformanceContext)[0];\r\n  const startingBalance = useContext(StartingBalanceContext)[0];\r\n\r\n  useEffect(() => {\r\n    if (socket && startingBalance.length === 0) socket.emit(\"get-starting-balances\");\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  function handleOrder(selected) {\r\n    socket.emit(\"market-order\", selected);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} alignItems=\"flex-start\">\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Portfolio\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TimelineView data={performance} />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper style={{ height: '100px', minWidth: '420px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='btc' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper style={{ height: '100px', minWidth: '420px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='fiat' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper style={{ height: '100px', minWidth: '420px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='net-result' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <BalancesTable balances={balances} onOrder={handleOrder} />\r\n        </Grid>\r\n        <Grid container item xs={4}>\r\n          <Grid item xs={12}>\r\n            <Paper style={{ height: '500px' }} className={classes.paper}>\r\n              <PieChart balances={balances} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { useContext } from 'react';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport \"./LineChart.css\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    const startingBalance = useContext(StartingBalanceContext)[0];\r\n\r\n    let performance = props.performance;\r\n    let type = props.type;\r\n    let title = props.title;\r\n    const balances = props.balances;\r\n    const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    let values = [];\r\n    let fiatValues = [];\r\n    let change = [];\r\n    let fiatChange = [];\r\n    let netvalues = [];\r\n    let netchange = [];\r\n    let netvaluesfiat = [];\r\n    let netchangefiat = [];\r\n    let data1, data2 = [];\r\n    let dayOne = [];\r\n    const fiat = useContext(FiatContext)[0];\r\n\r\n    rows.forEach((coin, i) => {\r\n        dayOne[i] = {\r\n            coin: coin.coin,\r\n            initial: 0,\r\n        };\r\n    });\r\n\r\n    let initialValue = 0;\r\n    let initialFiatValue = 0;\r\n\r\n    if (startingBalance.length !== 0) {\r\n        initialValue = startingBalance.btc;\r\n        initialFiatValue = (fiat === 'EUR') ? startingBalance.eur : startingBalance.usd;\r\n    }\r\n\r\n    if (performance.length !== 0) {\r\n        performance.forEach((day) => {\r\n            const fiatPrice = (fiat === 'EUR') ? day.eur : day.usd;\r\n            let value = 0;\r\n            let fiatValue = 0;\r\n            day.coins.forEach((coin) => {\r\n                value += coin.number * coin.price;\r\n                fiatValue += coin.number * coin.price * fiatPrice;\r\n            });\r\n\r\n            let netvalue = 0;\r\n            let netvaluefiat = 0;\r\n            day.coins.forEach((coin) => {\r\n                // Skip coins that are not in current portfolio\r\n                if (dayOne.find(c => c.coin === coin.coin)) {\r\n                    if (dayOne.find(c => c.coin === coin.coin).initial === 0) dayOne.find(c => c.coin === coin.coin).initial = coin.number;\r\n                    netvalue += dayOne.find(c => c.coin === coin.coin).initial * coin.price;\r\n                    netvaluefiat += dayOne.find(c => c.coin === coin.coin).initial * coin.price * fiatPrice;\r\n                }\r\n            })\r\n            values.push({\r\n                x: day.date,\r\n                y: value,\r\n            });\r\n            change.push({\r\n                x: day.date,\r\n                y: (value / initialValue - 1) * 100,\r\n            });\r\n            fiatValues.push({\r\n                x: day.date,\r\n                y: fiatValue,\r\n            });\r\n            fiatChange.push({\r\n                x: day.date,\r\n                y: (fiatValue / initialFiatValue - 1) * 100,\r\n            });\r\n            netvalues.push({\r\n                x: day.date,\r\n                y: value - netvalue,\r\n            });\r\n            netchange.push({\r\n                x: day.date,\r\n                y: ((value - netvalue) / initialValue) * 100,\r\n            });\r\n            netvaluesfiat.push({\r\n                x: day.date,\r\n                y: fiatValue - netvaluefiat,\r\n            });\r\n            netchangefiat.push({\r\n                x: day.date,\r\n                y: ((fiatValue - netvaluefiat) / initialFiatValue) * 100,\r\n            });\r\n        });\r\n    }\r\n    if (type === 'btc') {\r\n        data1 = [\r\n            {\r\n                id: 'Total Value (BTC)',\r\n                data: values,\r\n            }\r\n        ];\r\n        data2 = [\r\n            {\r\n                id: 'Total BTC Change (%)',\r\n                data: change,\r\n            }\r\n        ];\r\n    } else if (type === 'fiat') {\r\n        title = title.replace('Fiat', `${fiat}`);\r\n        data1 = [\r\n            {\r\n                id: `Total Value (${fiat})`,\r\n                data: fiatValues,\r\n            }\r\n        ];\r\n        data2 = [\r\n            {\r\n                id: `Total ${fiat} Change (%)`,\r\n                data: fiatChange,\r\n            }\r\n        ];\r\n    } else if (type === 'net-result') {\r\n        data1 = [\r\n            {\r\n                id: 'Net Balancing Result (BTC)',\r\n                data: netvalues,\r\n            }\r\n        ];\r\n        data2 = [\r\n            {\r\n                id: 'Net Balancing Result (%)',\r\n                data: netchange,\r\n            }\r\n        ];\r\n    } else {\r\n        title = title.replace('Fiat', `${fiat}`);\r\n        data1 = [\r\n            {\r\n                id: `Net Balancing Result (${fiat})`,\r\n                data: netvaluesfiat,\r\n            }\r\n        ];\r\n        data2 = [\r\n            {\r\n                id: 'Net Balancing Result (%)',\r\n                data: netchangefiat,\r\n            }\r\n        ];\r\n    }\r\n\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            crosshair: {\r\n                line: {\r\n                    stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                },\r\n            }\r\n        };\r\n    };\r\n\r\n    const getAxis1 = () => {\r\n        return {\r\n            legend: data1[0].id,\r\n            legendOffset: -80,\r\n            legendPosition: 'middle',\r\n        }\r\n    }\r\n\r\n    const getAxis2 = () => {\r\n        return {\r\n            legend: data2[0].id,\r\n            legendOffset: 70,\r\n            legendPosition: 'middle',\r\n        }\r\n    }\r\n\r\n    function uniq(a) {\r\n        var seen = {};\r\n        return a.filter(function (item) {\r\n            return seen.hasOwnProperty(item) ? false : (seen[item] = true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{title}</b></div>\r\n            <div className=\"secondGraph\">\r\n                {(startingBalance.length !== 0) ? (\r\n                    <ResponsiveLine\r\n                        data={data1}\r\n                        sliceTooltip={({ slice }) => {\r\n                            let background = (mode === 'light') ? \"#FFFFFF\" : \"#000000\";\r\n                            let color = (mode === 'light') ? \"#000000\" : \"#FFFFFF\";\r\n                            return (\r\n                                <div\r\n                                    style={{\r\n                                        background: background,\r\n                                        boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n                                        padding: '9px 12px',\r\n                                    }}\r\n                                >\r\n                                    {/* <div>x: {slice.id}</div> */}\r\n                                    {uniq(slice.points).map(point => (\r\n                                        <div\r\n                                            key={point.id}\r\n                                            style={{\r\n                                                color: color,\r\n                                                padding: '3px 0',\r\n                                            }}\r\n                                        >\r\n                                            {point.serieId} <strong>{point.data.yFormatted}</strong>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )\r\n                        }}\r\n                        theme={getTheme()}\r\n                        margin={{ top: 40, right: 90, bottom: 50, left: 90 }}\r\n                        xScale={{\r\n                            type: 'time',\r\n                            format: '%Y/%m/%d',\r\n                            useUTC: false,\r\n                            precision: 'day',\r\n                        }}\r\n                        xFormat=\"time:%Y/%m/%d\"\r\n                        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                        yFormat=\" >-.6f\"\r\n                        curve=\"monotoneX\"\r\n                        colors={['rgb(255,255,255,0)']}\r\n                        axisTop={null}\r\n                        axisRight={null}\r\n                        axisBottom={null}\r\n                        axisLeft={getAxis1()}\r\n                        enablePoints={false}\r\n                        enableGridX={false}\r\n                        enableGridY={false}\r\n                        // useMesh={true}\r\n                        enableSlices=\"y\"\r\n                        crosshairType=\"y\"\r\n                    />\r\n                ) : (null)}\r\n            </div>\r\n            <div className=\"graphContainer\">\r\n                {(startingBalance.length !== 0) ? (\r\n                    <ResponsiveLine\r\n                        data={data2}\r\n                        theme={getTheme()}\r\n                        margin={{ top: 40, right: 90, bottom: 50, left: 90 }}\r\n                        xScale={{\r\n                            type: 'time',\r\n                            format: '%Y/%m/%d',\r\n                            useUTC: false,\r\n                            precision: 'day',\r\n                        }}\r\n                        xFormat=\"time:%Y/%m/%d\"\r\n                        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                        yFormat=\" >-.6f\"\r\n                        curve=\"monotoneX\"\r\n                        lineWidth={4}\r\n                        colors={['rgb(211,47,47)']}\r\n                        axisTop={null}\r\n                        axisBottom={null}\r\n                        axisRight={getAxis2()}\r\n                        axisLeft={null}\r\n                        enablePoints={false}\r\n                        enableGridX={false}\r\n                        enableGridY={false}\r\n                        // useMesh={true}\r\n                        enableSlices=\"y\"\r\n                        crosshairType=\"y\"\r\n                    />\r\n                ) : (null)}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport StatusView from \"../components/StatusView\";\r\nimport LineChart from '../components/LineChart';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Performance = () => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const performance = useContext(PerformanceContext)[0];\r\n  const startingBalance = useContext(StartingBalanceContext)[0];\r\n\r\n  useEffect(() => {\r\n    if (socket && startingBalance.length === 0) socket.emit(\"get-starting-balances\");\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Performance\r\n        </Typography>\r\n        </Grid>\r\n        {/* <Grid item xs={2}></Grid> */}\r\n        <Grid item xs={4}>\r\n          <TimelineView data={performance} />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart performance={performance} balances={balances} type={'btc'} title={'Portfolio Value (BTC)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart performance={performance} balances={balances} type={'fiat'} title={'Portfolio Value (Fiat)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart performance={performance} balances={balances} type={'net-result'} title={'Net Balancing Result (BTC)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart performance={performance} balances={balances} type={'net-result-fiat'} title={'Net Balancing Result (Fiat)'} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Performance;","import { ResponsiveLine } from '@nivo/line'\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n\r\n    let performance = props.performance;\r\n    const balances = props.balances;\r\n    const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    let coins = [];\r\n    let data = [];\r\n    let prices = [];\r\n\r\n    rows.forEach((coin, i) => {\r\n        coins.push(coin.coin);\r\n        prices[i] = {\r\n            coin: coin.coin,\r\n            initial: 0,\r\n            data: [],\r\n        };\r\n    });\r\n\r\n    if (performance !== []) {\r\n        coins.forEach((coin, i) => {\r\n            if (coin !== 'BTC') {\r\n                performance.forEach((day) => {\r\n                    day.coins.forEach((c) => {\r\n                        if (c.coin === coin) {\r\n                            if (prices[i].initial === 0) prices[i].initial = c.price;\r\n                            prices[i].data.push({\r\n                                x: day.date,\r\n                                y: (c.price / prices[i].initial - 1) * 100,\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                data.push({\r\n                    id: coin,\r\n                    data: prices[i].data,\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            crosshair: {\r\n                line: {\r\n                    stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                },\r\n            },\r\n            legends: {\r\n                text: {\r\n                    fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                }\r\n            },\r\n        };\r\n    };\r\n\r\n    function uniq(a) {\r\n        var seen = {};\r\n        return a.filter(function (item) {\r\n            return seen.hasOwnProperty(item) ? false : (seen[item] = true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{props.title}</b></div>\r\n            <div className=\"graphContainerCoins\">\r\n                <ResponsiveLine\r\n                    data={data}\r\n                    sliceTooltip={({ slice }) => {\r\n                        let background = (mode === 'light') ? \"#FFFFFF\" : \"#000000\";\r\n                        return (\r\n                            <div\r\n                                style={{\r\n                                    background: background,\r\n                                    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n                                    padding: '9px 12px',\r\n                                }}\r\n                            >\r\n                                {/* <div>x: {slice.id}</div> */}\r\n                                {uniq(slice.points).map(point => (\r\n                                    <div\r\n                                        key={point.id}\r\n                                        style={{\r\n                                            color: point.serieColor,\r\n                                            padding: '3px 0',\r\n                                        }}\r\n                                    >\r\n                                        {point.serieId} <strong>{point.data.yFormatted}%</strong>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                    }}\r\n                    theme={getTheme()}\r\n                    margin={{ top: 50, right: 110, bottom: 50, left: 80 }}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%Y/%m/%d',\r\n                        useUTC: false,\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%Y/%m/%d\"\r\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                    yFormat=\" >-.2f\"\r\n                    curve=\"monotoneX\"\r\n                    lineWidth={4}\r\n                    colors={{ scheme: 'red_yellow_blue' }}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={null}\r\n                    axisLeft={{\r\n                        legend: 'Change (%)',\r\n                        legendOffset: -70,\r\n                        legendPosition: 'middle',\r\n                    }}\r\n                    enablePoints={false}\r\n                    enableGridX={false}\r\n                    enableGridY={false}\r\n                    // useMesh={true}\r\n                    enableSlices=\"y\"\r\n                    crosshairType=\"y\"\r\n                    legends={[\r\n                        {\r\n                            anchor: 'bottom-right',\r\n                            direction: 'column',\r\n                            justify: false,\r\n                            translateX: 100,\r\n                            translateY: 0,\r\n                            itemsSpacing: 0,\r\n                            itemDirection: 'left-to-right',\r\n                            itemWidth: 80,\r\n                            itemHeight: 20,\r\n                            itemOpacity: 0.75,\r\n                            symbolSize: 12,\r\n                            symbolShape: 'circle',\r\n                            symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                            itemTextColor: \"#ff0000\",\r\n                            effects: [\r\n                                {\r\n                                    on: 'hover',\r\n                                    style: {\r\n                                        itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                        itemOpacity: 1\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport StatusView from \"../components/StatusView\";\r\nimport LineChartCoins from '../components/LineChartCoins';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CoinAnalysis = () => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const performance = useContext(PerformanceContext)[0];\r\n  const startingBalance = useContext(StartingBalanceContext)[0];\r\n\r\n  useEffect(() => {\r\n    if (socket && startingBalance.length === 0) socket.emit(\"get-starting-balances\");\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Coin Analysis\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TimelineView data={performance} />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper style={{ height: '700px' }} className={classes.paper}>\r\n            <LineChartCoins performance={performance} balances={balances} title={'Coin BTC Price Changes (%)'} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinAnalysis;","import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    errortext: {\r\n        color: \"#ff0000\",\r\n    },\r\n}));\r\n\r\nexport default function HistoryTable() {\r\n    const classes = useStyles();\r\n\r\n    let [eventdata, setEventdata] = useState({\r\n        rows: [],\r\n        total: 0,\r\n    });\r\n\r\n    let [filter, setFilter] = useState({\r\n        type: ['order', 'error'],\r\n        event: '',\r\n        page: '1',\r\n    });\r\n\r\n    let [history, setHistory] = useState({\r\n        logs: [],\r\n        total: 0,\r\n    });\r\n\r\n    const handleHistoryChange = (hist) => {\r\n        let rows = []\r\n        hist.logs.reverse().forEach((log) => {\r\n            rows.push({\r\n                time: log.time,\r\n                type: log.type,\r\n                event: log.event,\r\n            });\r\n        });\r\n        setEventdata({\r\n            rows: rows,\r\n            total: hist.total,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleHistoryChange(history);\r\n\r\n        return () => {\r\n        }\r\n    }, [history]);\r\n\r\n\r\n    const handleEvent = (log, summary) => {\r\n        if (socket) socket.emit(\"get-logs\", filter);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"event-history\", (logs, total) => {\r\n            setHistory({\r\n                logs: logs,\r\n                total: total,\r\n            });\r\n        });\r\n        socket.on(\"event\", function (log, summary) {\r\n            handleEvent(log, summary);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"event-history\");\r\n            socket.off(\"event\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socket) socket.emit(\"get-logs\", filter);\r\n        return () => {\r\n        }\r\n    }, [filter]);\r\n\r\n    const handlePage = (event, newPage) => {\r\n        setFilter({\r\n            type: filter.type,\r\n            event: filter.event,\r\n            page: newPage,\r\n        });\r\n    };\r\n\r\n    const handleTypeFilter = (event, newTypes) => {\r\n        setFilter({\r\n            type: newTypes,\r\n            event: filter.event,\r\n            page: filter.page,\r\n        });\r\n    };\r\n\r\n    const handleEventFilter = (e) => {\r\n        setFilter({\r\n            type: filter.type,\r\n            event: e.target.value,\r\n            page: filter.page,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Paper pt={2}>\r\n            <Grid container style={{ height: '60px' }} alignItems=\"center\">\r\n                <Box p={1}>\r\n                    <Grid item xs={3}>\r\n                        <ToggleButtonGroup value={filter.type} onChange={handleTypeFilter} aria-label=\"type selection\">\r\n                            <ToggleButton value=\"order\" aria-label=\"order\" style={{ height: '30px' }} >\r\n                                <Typography variant=\"overline\" noWrap>\r\n                                    Orders\r\n                                </Typography>\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"error\" aria-label=\"error\" style={{ height: '30px' }} >\r\n                                <Typography variant=\"overline\" noWrap>\r\n                                    Errors\r\n                                </Typography>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Grid>\r\n                </Box>\r\n                <Grid item xs={2}>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <TextField id=\"event-filter\" label=\"Filter events\" color=\"secondary\" onChange={handleEventFilter} />\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={7}></Grid>\r\n            </Grid>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell style={{ width: '170px' }}>Time</StyledTableCell>\r\n                            <StyledTableCell>Event</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {eventdata.rows.map((row, i) => (\r\n                            <StyledTableRow key={i}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"caption\">{row.time}</Typography>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    {(row.type === 'error') ? (\r\n                                        <Typography variant=\"body2\" className={classes.errortext}>{row.event}</Typography>\r\n                                    ) : (\r\n                                        <Typography variant=\"body2\">{row.event}</Typography>\r\n                                    )}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" >\r\n                <Pagination count={Math.ceil(eventdata.total / 20)} shape=\"rounded\" onChange={handlePage} />\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HistoryTable from \"../components/HistoryTable\";\r\nimport StatusView from '../components/StatusView';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EventHistory = (props) => {\r\n  const classes = useStyles();\r\n  const performance = useContext(PerformanceContext)[0];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Event History\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TimelineView data={performance} />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <HistoryTable />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default EventHistory;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const ConfigurationInputContext = createContext();\r\n\r\nexport const ConfigurationInputProvider = (props) => {\r\n    const [configurationInput, setConfigurationInput] = useState({});\r\n\r\n    return (\r\n        <ConfigurationInputContext.Provider value={[configurationInput, setConfigurationInput]}>\r\n            {props.children}\r\n        </ConfigurationInputContext.Provider>\r\n    )\r\n}","import { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport const HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 600,\r\n        fontSize: theme.typography.pxToRem(14),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);","import React, { useState, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\n\r\nexport default function ConfigP1(props) {\r\n\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const [apiKey, setApiKey] = useState(input.apiKey);\r\n    const [apiSecret, setApiSecret] = useState(input.apiSecret);\r\n\r\n    const onInput = (e) => {\r\n        props.callback({\r\n            field: e.target.id,\r\n            input: e.target.value\r\n        });\r\n\r\n        if (e.target.id === 'apiKey') setApiKey(e.target.value);\r\n        if (e.target.id === 'apiSecret') setApiSecret(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container xs={12} alignItems=\"flex-end\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Exchange API Details\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <HtmlTooltip\r\n                        title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\" variant=\"h6\">Hints</Typography>\r\n                                <div>&nbsp;</div>\r\n                                {\"If you haven't done so already, logon to your exchange, go to API Management and create a new API. Then enter the API key and API secret here.\"}\r\n                                <div>&nbsp;</div>\r\n                                <div><i>{\"Note: \"}</i>{\"You only need to enter the API details once, as your API details will be stored on the server for later use. If you want to change the configuration settings at a later point, you can just click the Next button and reuse the API that you've already configured previously. If you want to change to a different API, you can override the original API by entering the new details here.\"}</div>\r\n                            </React.Fragment>\r\n                        }\r\n                    >\r\n                        <InfoOutlinedIcon />\r\n                    </HtmlTooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <form style={{ minWidth: '100%' }}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"apiKey\"\r\n                            name=\"apiKey\"\r\n                            label=\"API Key\"\r\n                            type=\"password\"\r\n                            value={apiKey}\r\n                            onChange={onInput}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"apiSecret\"\r\n                            name=\"apiSecret\"\r\n                            label=\"API Secret\"\r\n                            type=\"password\"\r\n                            value={apiSecret}\r\n                            onChange={onInput}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { withStyles, makeStyles, lighten } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\n\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst iOSBoxShadow =\r\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nconst MySlider = withStyles({\r\n    root: {\r\n        height: 2,\r\n        padding: '15px 0',\r\n    },\r\n    thumb: {\r\n        height: 28,\r\n        width: 28,\r\n        boxShadow: iOSBoxShadow,\r\n        marginTop: -14,\r\n        marginLeft: -14,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                boxShadow: iOSBoxShadow,\r\n            },\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 12px)',\r\n        top: 9,\r\n        '& *': {\r\n            background: 'transparent',\r\n            color: '#FFFFFF',\r\n        },\r\n    },\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        height: 2,\r\n        opacity: 0.5,\r\n        backgroundColor: 'secondary',\r\n    },\r\n    mark: {\r\n        backgroundColor: 'secondary',\r\n        height: 8,\r\n        width: 1,\r\n        marginTop: -3,\r\n    },\r\n    markActive: {\r\n        opacity: 1,\r\n        backgroundColor: 'currentColor',\r\n    },\r\n})(Slider);\r\n\r\nconst headCells = [\r\n    { id: 'coin', align: 'left', disablePadding: true, label: 'Coin' },\r\n    { id: 'change', align: 'center', disablePadding: false, label: 'Change Distribution (%)' },\r\n    { id: 'distribution', align: 'left', disablePadding: false, label: '' },\r\n    { id: 'notifications', align: 'left', disablePadding: false, label: '' },\r\n];\r\n\r\nconst marks = [\r\n    {\r\n        value: -1,\r\n        label: '',\r\n    },\r\n    {\r\n        value: 100,\r\n        label: '',\r\n    },\r\n];\r\n\r\nconst useTableHeadStyles = makeStyles((theme) => ({\r\n    headcolor:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                backgroundColor: '#aaaaaa',\r\n            }\r\n            : {\r\n                backgroundColor: '#777777',\r\n            },\r\n    headheight: {\r\n        height: 44,\r\n    },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, numSelected, rowCount } = props;\r\n    const classes = useTableHeadStyles();\r\n\r\n    let checkbox;\r\n    checkbox = <Checkbox\r\n        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n        checked={rowCount > 0 && numSelected === rowCount}\r\n        onChange={onSelectAllClick}\r\n        inputProps={{ 'aria-label': 'select coins' }}\r\n    />\r\n    return (\r\n        <TableHead>\r\n            <TableRow className={`${classes.headcolor} ${classes.headheight}`}>\r\n                <TableCell padding=\"checkbox\">\r\n                    {checkbox}\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                    >\r\n                        <TableSortLabel>\r\n                            {headCell.label}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { selected, portfolio, setSelected } = props;\r\n    const numSelected = selected.length;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {(numSelected === 1) ? 'Coin' : 'Coins'} <i>excluded</i> from balancing: {selected.join()}\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"subtitle1\" id=\"tableTitle\" component=\"div\">\r\n                    Select coins to be <i>excluded</i> from balancing\r\n                </Typography>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    selected: PropTypes.array.isRequired,\r\n    portfolio: PropTypes.array.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '800px',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        maxWidth: 800,\r\n        minWidth: 800,\r\n        \"& .MuiTableCell-sizeSmall\": {\r\n            paddingTop: \"6px\",\r\n            paddingBottom: \"0px\",\r\n        },\r\n    },\r\n    cell: {\r\n        width: 50,\r\n    },\r\n    cell2: {\r\n        width: 120,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function ConfigP2(props) {\r\n    const classes = useStyles();\r\n\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const newPortfolio = (input.portfolio) ? input.portfolio : [];\r\n    const [portfolio, setPortfolio] = useState(newPortfolio);\r\n    const [portfolioReceived, setPortfolioReceived] = useState(false);\r\n\r\n    let newSelected = [];\r\n    newPortfolio.forEach((coin) => {\r\n        if (coin.excluded) newSelected.push(coin.coin);\r\n    });\r\n    const [selected, setSelected] = useState(newSelected);\r\n    const precision = 2;\r\n\r\n    const onInput = (data) => {\r\n        props.callback({\r\n            field: 'portfolio',\r\n            input: data,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on(\"portfolio\", data => {\r\n            const numCoins = data.length;\r\n            data.forEach((coin) => {\r\n                // Check if coin was already in portfolio or is newly added to account\r\n                const match = input.portfolio.find(c => c.coin === coin.coin);\r\n                if (!match) {\r\n                    // On initial configuration, don't exclude coins\r\n                    if (input.apiKey === '************' && input.apiSecret === '************') {\r\n                        coin.slider = -1;\r\n                        coin.distribution = 0;\r\n                        coin.excluded = true;\r\n                        setSelected(prevState => [...prevState, coin.coin]);\r\n                    } else {\r\n                        coin.slider = -1;\r\n                        coin.distribution = (100 / numCoins).toFixed(2);\r\n                        coin.excluded = false;\r\n                    }\r\n                } else {\r\n                    coin.slider = match.slider;\r\n                    coin.distribution = match.distribution;\r\n                    coin.excluded = match.excluded;\r\n                }\r\n            });\r\n            setPortfolioReceived(true);\r\n            setPortfolio(data);\r\n            onInput(data);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"portfolio\");\r\n        }\r\n    }, []);\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        let newSelected = [];\r\n        if (selected.length === 0) {\r\n            newSelected = portfolio.map((n) => n.coin).filter(coin => coin !== 'BTC');\r\n        }\r\n        setSelected(newSelected);\r\n\r\n        portfolio.forEach((coin) => {\r\n            handleSlider(coin.slider, coin.coin, newSelected);\r\n        })\r\n    };\r\n\r\n    const handleClick = (coin) => {\r\n        if (coin !== 'BTC') {\r\n            const selectedIndex = selected.indexOf(coin);\r\n\r\n            let newPortfolio = [...portfolio];\r\n            let match = newPortfolio.find(c => c.coin === coin);\r\n            match.excluded = (selectedIndex === -1);\r\n            setPortfolio(newPortfolio);\r\n\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, coin);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n            handleSlider(match.slider, match.coin, newSelected);\r\n        }\r\n    };\r\n\r\n    const handleSlider = (value, coin, select = selected) => {\r\n        let newPortfolio = [...portfolio];\r\n        let match = newPortfolio.find(c => c.coin === coin);\r\n        match.slider = value;\r\n\r\n        let totalSlider = 0;\r\n        let numSlider = 0;\r\n        newPortfolio.forEach((coin) => {\r\n            if (select.indexOf(coin.coin) === -1) {\r\n                totalSlider += coin.slider;\r\n                if (coin.slider === -1) totalSlider++;\r\n                if (coin.slider !== -1) numSlider++;\r\n            }\r\n        });\r\n        let maxSlider;\r\n        const remainingSlider = 100 - totalSlider;\r\n        const numCoinsZero = newPortfolio.length - numSlider - select.length;\r\n        maxSlider = (numCoinsZero === 0) ? totalSlider : Math.max(100, totalSlider);\r\n        newPortfolio.forEach((coin) => {\r\n            coin.excluded = false;\r\n            if (select.indexOf(coin.coin) !== -1) {\r\n                coin.distribution = (0).toFixed(precision);\r\n                coin.excluded = true;\r\n            } else if (maxSlider <= 100) {\r\n                if (coin.slider === -1) coin.distribution = (remainingSlider / numCoinsZero).toFixed(precision);\r\n                else coin.distribution = (coin.slider / maxSlider * 100).toFixed(precision);\r\n            } else {\r\n                if (coin.slider === -1) coin.distribution = (0).toFixed(precision);\r\n                else coin.distribution = (coin.slider / maxSlider * 100).toFixed(precision);\r\n            }\r\n        });\r\n\r\n        setPortfolio(newPortfolio);\r\n        onInput(newPortfolio);\r\n    };\r\n\r\n    const labelFormatter = (value) => {\r\n        if (value === -1) return '=';\r\n        return value;\r\n    }\r\n\r\n    const isSelected = (coin) => selected.indexOf(coin) !== -1;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container xs={12} alignItems=\"flex-end\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Coin Settings\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <HtmlTooltip\r\n                        title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\" variant=\"h6\">Hints</Typography>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Exclude coins\"}</b></div>\r\n                                <div>{\"Use the checkboxes on the left to exclude coins in your account from balancing. Balancing Bot will completely ignore selected coins.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Coin distribution\"}</b></div>\r\n                                <div>{\"By default, all coins are balanced with an equal distribution. If you'd like to change the target distribution of your coins, use the sliders. Coins with their slider all the way to the left will get an even distribution up to a total of 100%.\"}</div>\r\n                            </React.Fragment>\r\n                        }\r\n                    >\r\n                        <InfoOutlinedIcon />\r\n                    </HtmlTooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Paper className={classes.paper} elevation={0}>\r\n\r\n                    {(portfolioReceived) ? (\r\n                        <div>\r\n                            <EnhancedTableToolbar selected={selected} portfolio={portfolio} setSelected={setSelected} />\r\n                            < Table\r\n                                className={classes.table}\r\n                                size=\"small\"\r\n                                aria-labelledby=\"tableTitle\"\r\n                                aria-label=\"enhanced table\"\r\n                            >\r\n                                <EnhancedTableHead\r\n                                    classes={classes}\r\n                                    numSelected={selected.length}\r\n                                    onSelectAllClick={handleSelectAllClick}\r\n                                    rowCount={portfolio.length}\r\n                                />\r\n                                <TableBody>\r\n                                    {portfolio.map((coin, index) => {\r\n                                        const isItemSelected = isSelected(coin.coin);\r\n                                        const labelId = `enhanced-table-checkbox-${index}`;\r\n                                        let checkbox;\r\n                                        if (coin.coin !== 'BTC') {\r\n                                            checkbox = <Checkbox\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        } else {\r\n                                            checkbox = null;\r\n                                        }\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                hover\r\n                                                // onClick={(event) => handleClick(event, coin.coin)}\r\n                                                role=\"checkbox\"\r\n                                                aria-checked={isItemSelected}\r\n                                                tabIndex={-1}\r\n                                                key={coin.coin}\r\n                                                selected={isItemSelected}\r\n                                            >\r\n                                                <TableCell padding=\"checkbox\" onClick={(event) => handleClick(coin.coin)}>\r\n                                                    {checkbox}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\" onClick={(event) => handleClick(coin.coin)}>\r\n                                                    {coin.coin}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <MySlider\r\n                                                        value={coin.slider}\r\n                                                        step={1}\r\n                                                        valueLabelDisplay=\"on\"\r\n                                                        marks={marks}\r\n                                                        min={-1}\r\n                                                        valueLabelFormat={value => <div>{labelFormatter(value)}</div>}\r\n                                                        onChange={(event, value) => handleSlider(value, coin.coin)}\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" className={classes.cell} id={labelId} scope=\"row\" padding=\"none\" align=\"left\" onClick={(event) => handleClick(coin.coin)}>\r\n                                                    {coin.distribution}%\r\n                                        </TableCell>\r\n                                                <TableCell component=\"th\" className={classes.cell2} id={labelId} scope=\"row\" padding=\"none\" align=\"left\">\r\n                                                    {(coin.coin === 'BTC' && parseFloat(coin.distribution) === 0) ? (\r\n                                                        <Typography variant=\"overline\" color=\"secondary\">Cannot be 0%</Typography>\r\n                                                    ) : (null)\r\n                                                    }\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Box pt={4}></Box>\r\n                            <Typography>Loading account data...</Typography>\r\n                            <Box pt={4}></Box>\r\n                            <Skeleton animation=\"wave\" />\r\n                            <Skeleton animation=\"wave\" />\r\n                            <Skeleton animation=\"wave\" />\r\n                        </div>\r\n                    )}\r\n                </Paper>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\n\r\nconst columns = [\r\n    { field: 'coin', headerName: 'Coin', width: 350, editable: false },\r\n    { field: 'number', headerName: 'Number', type: 'number', width: 200, editable: true, valueFormatter: ({ value }) => (Number(value)) },\r\n    { field: 'price', headerName: 'Price (BTC)', type: 'number', width: 200, editable: true, valueFormatter: ({ value }) => (Number(value)) },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    header: {\r\n        \"& .MuiDataGrid-colCell\":\r\n            theme.palette.type === 'light'\r\n                ? {\r\n                    backgroundColor: '#aaaaaa',\r\n                }\r\n                : {\r\n                    backgroundColor: '#777777',\r\n                },\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function ConfigP3(props) {\r\n    const classes = useStyles();\r\n\r\n    let newStartPerformance = [];\r\n\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const newPortfolio = input.portfolio;\r\n    let date = input.startdate;\r\n    const [portfolio, setPortfolio] = useState(newPortfolio);\r\n    const [selectedDate, setSelectedDate] = useState(date);\r\n    const [recreate, setRecreate] = useState(false);\r\n\r\n    newPortfolio.forEach((coin) => {\r\n        if (!coin.excluded) {\r\n            newStartPerformance.push({\r\n                id: coin.coin,\r\n                coin: coin.coin,\r\n                number: Number((coin.number).toFixed(8)),\r\n                price: Number((coin.price).toFixed(8)),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [startPerformance, setStartPerformance] = useState(newStartPerformance);\r\n\r\n    const handleDateChange = (date) => {\r\n        props.callback({\r\n            field: 'startdate',\r\n            input: date,\r\n        });\r\n        setSelectedDate(date);\r\n        setRecreate(true);\r\n    };\r\n\r\n    const handleCheck = (e) => {\r\n        const checked = e.target.checked;\r\n        props.callback({\r\n            field: 'recreate',\r\n            input: checked,\r\n        });\r\n        setRecreate(checked);\r\n    }\r\n\r\n    const handleEditCellChangeCommitted = (e) => {\r\n        let newPortfolio = [...portfolio];\r\n        let match = newPortfolio.find(c => c.coin === e.id);\r\n        match[e.field] = Number(e.props.value);\r\n\r\n        setPortfolio(newPortfolio);\r\n        props.callback({\r\n            field: 'portfolio',\r\n            input: newPortfolio,\r\n        });\r\n        setRecreate(true);\r\n    }\r\n\r\n    function CustomToolbar() {\r\n        return (\r\n            <Grid container alignItems=\"flex-end\">\r\n                <Grid item xs={6}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"yyyy/MM/dd\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Set start date\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                <Grid item xs={2}></Grid>\r\n                <Grid item xs={4}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"rewrite\" value=\"yes\" checked={recreate} onChange={handleCheck} />}\r\n                        label=\"Recreate performance data\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container xs={12} alignItems=\"flex-end\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Starting Balance\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <HtmlTooltip\r\n                        title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\" variant=\"h6\">Hints</Typography>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Use of starting balance\"}</b></div>\r\n                                <div>{\"Balancing Bot uses the starting balance to determine the performance of your balancing portfolio. It compares the current portfolio value with the starting portfolio value to calculate the change.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Default starting balance\"}</b></div>\r\n                                <div>{\"By default, Balancing Bot will check the number of coins in your account and their prices upon first-time configuration, and use these to calculate the starting balance.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Customize starting balance\"}</b></div>\r\n                                <div>{\"If you started balancing at an earlier point in time, you can manually change the starting balance for your account. Do so by setting the starting date, and by filling in the number of coins and their prices at which you purchased those coins. Simply click on the cells in the table to edit. Make sure the 'Recreate performance data' checkbox is ticked.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><i>{\"Note: \"}</i>{\"This operation cannot be undone. However, you can set a new starting balance and date at anytime.\"}</div>\r\n                            </React.Fragment>\r\n                        }\r\n                    >\r\n                        <InfoOutlinedIcon />\r\n                    </HtmlTooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <div style={{ width: '752px' }}>\r\n                <CustomToolbar />\r\n                <Box pt={3}>\r\n                    <Grid container spacing={3}>\r\n                        <Paper className={classes.paper} elevation={0}>\r\n                            <div style={{ width: '752px' }}>\r\n                                <DataGrid className={classes.header} rows={startPerformance} columns={columns}\r\n                                    autoHeight={true}\r\n                                    density='compact'\r\n                                    disableColumnSelector={true}\r\n                                    disableColumnMenu={true}\r\n                                    hideFooter={true}\r\n                                    hideFooterPagination={true}\r\n                                    hideFooterRowCount={true}\r\n                                    onEditCellChangeCommitted={handleEditCellChangeCommitted}\r\n                                />\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Box>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { add } from 'date-fns'\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    textinput: {\r\n        width: '380px',\r\n    }\r\n}));\r\n\r\nexport default function ConfigP4(props) {\r\n    const classes = useStyles();\r\n\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n\r\n    const newBotname = (input.botname) ? input.botname : '';\r\n    const newThreshold = (input.threshold) ? input.threshold : '';\r\n    const newTimeshift = (input.timeshift) ? input.timeshift : '0';\r\n    const newHeadless = (input.headless) ? input.headless : false;\r\n    const newRunning = (input.running) ? input.running : true;\r\n\r\n    const [botname, setBotname] = useState(newBotname);\r\n    const [threshold, setThreshold] = useState(newThreshold);\r\n    const [timeshift, setTimeshift] = useState(newTimeshift);\r\n    const [headless, setHeadless] = useState(newHeadless);\r\n    const [running, setRunning] = useState(newRunning);\r\n\r\n    const getHour = (shift) => {\r\n        const now = new Date();\r\n        const current = now.getHours().toString().padStart(2, '0') + \":\" + now.getMinutes().toString().padStart(2, '0');\r\n        let adjusted = now;\r\n        if (shift !== 0) adjusted = add(now, { hours: shift });\r\n\r\n        const newt = adjusted.getHours().toString().padStart(2, '0') + \":\" + adjusted.getMinutes().toString().padStart(2, '0');\r\n        return [current, newt];\r\n    }\r\n\r\n    const [currenttime, setCurrenttime] = useState(getHour(newTimeshift)[0]);\r\n    const [newtime, setNewtime] = useState(getHour(newTimeshift)[1]);\r\n\r\n    const onHeadless = (e) => {\r\n        props.callback({\r\n            field: 'headless',\r\n            input: e.target.checked,\r\n        });\r\n        setHeadless(e.target.checked);\r\n    }\r\n\r\n    const onRunning = (e) => {\r\n        props.callback({\r\n            field: 'running',\r\n            input: e.target.checked,\r\n        });\r\n        setRunning(e.target.checked);\r\n    }\r\n\r\n    const onBotname = (e) => {\r\n        props.callback({\r\n            field: e.target.id,\r\n            input: e.target.value\r\n        });\r\n        setBotname(e.target.value);\r\n    }\r\n\r\n    const onThreshold = (e) => {\r\n        const pattern = /^[0-9]*\\.?[0-9]*$/\r\n        if (pattern.test(e.target.value)) {\r\n            props.callback({\r\n                field: e.target.id,\r\n                input: e.target.value\r\n            });\r\n            setThreshold(e.target.value);\r\n        }\r\n    }\r\n\r\n    const onTimeshift = (e) => {\r\n        props.callback({\r\n            field: 'timeshift',\r\n            input: e.target.value\r\n        });\r\n        setTimeshift(e.target.value);\r\n        setNewtime(getHour(e.target.value)[1]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container xs={12} alignItems=\"flex-end\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        General Settings\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <HtmlTooltip\r\n                        title={\r\n                            <React.Fragment>\r\n                                <Typography color=\"inherit\" variant=\"h6\">Hints</Typography>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Bot name\"}</b></div>\r\n                                <div>{\"Give your bot a descriptive name. This is especially useful if you run multiple bots, so you can easily recognize each.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Balancing threshold\"}</b></div>\r\n                                <div>{\"The balancing threshold is used by Balancing Bot to determine when to sell/buy coins. The threshold is the relative deviation from the target distribution at which point the bot will place an order to restore the coin to the target distribution.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Server timezone adjustment\"}</b></div>\r\n                                <div>{\"If you're hosting your bot in the cloud, and the server's timezone is different from your local timezone, you can use this setting to adjust for that so that timestamps for orders and other events are provided in your local timezone.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><b>{\"Automatic mode\"}</b></div>\r\n                                <div>{\"You can operate your bot manually. In this mode, you will need to keep an eye on the dashboard and place manual orders when the dashboard indicates that a coin should be bought or sold. This is useful if you want to have full control, typically when you use Balancing Bot for the first time and you want to get a feel for how it works.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div>{\"Enabling automatic mode is a lot more practical though, as Balancing Bot will run 24/7 and place orders automatically to keep your portfolio balanced.\"}</div>\r\n                                <div>&nbsp;</div>\r\n                                <div><i>{\"Note: \"}</i>{\"You don't need to keep your browser open to run your bot in automatic mode. The application will keep running in the background. You can open the application in the browser at any time to check the status of your bot.\"}</div>\r\n                            </React.Fragment>\r\n                        }\r\n                    >\r\n                        <InfoOutlinedIcon />\r\n                    </HtmlTooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"botname\"\r\n                        name=\"botname\"\r\n                        label=\"Bot Name\"\r\n                        helperText=\"Give your bot a name\"\r\n                        value={botname}\r\n                        onChange={onBotname}\r\n                        className={classes.textinput}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"threshold\"\r\n                        name=\"threshold\"\r\n                        label=\"Balancing Threshold (%)\"\r\n                        helperText=\"At what deviation from the target distribution should be balanced\"\r\n                        value={threshold}\r\n                        onChange={onThreshold}\r\n                        className={classes.textinput}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"server-timezone\">Adjust for server timezone</InputLabel>\r\n                        <Select\r\n                            labelId=\"server-timezone\"\r\n                            value={timeshift}\r\n                            onChange={onTimeshift}\r\n                            className={classes.textinput}\r\n                        >\r\n                            <MenuItem value={12}>+12:00</MenuItem>\r\n                            <MenuItem value={11}>+11:00</MenuItem>\r\n                            <MenuItem value={10}>+10:00</MenuItem>\r\n                            <MenuItem value={9}>+09:00</MenuItem>\r\n                            <MenuItem value={8}>+08:00</MenuItem>\r\n                            <MenuItem value={7}>+07:00</MenuItem>\r\n                            <MenuItem value={6}>+06:00</MenuItem>\r\n                            <MenuItem value={5}>+05:00</MenuItem>\r\n                            <MenuItem value={4}>+04:00</MenuItem>\r\n                            <MenuItem value={3}>+03:00</MenuItem>\r\n                            <MenuItem value={2}>+02:00</MenuItem>\r\n                            <MenuItem value={1}>+01:00</MenuItem>\r\n                            <MenuItem value={0}>No adjustment</MenuItem>\r\n                            <MenuItem value={-1}>-01:00</MenuItem>\r\n                            <MenuItem value={-2}>-02:00</MenuItem>\r\n                            <MenuItem value={-3}>-03:00</MenuItem>\r\n                            <MenuItem value={-4}>-04:00</MenuItem>\r\n                            <MenuItem value={-5}>-05:00</MenuItem>\r\n                            <MenuItem value={-6}>-06:00</MenuItem>\r\n                            <MenuItem value={-7}>-07:00</MenuItem>\r\n                            <MenuItem value={-8}>-08:00</MenuItem>\r\n                            <MenuItem value={-9}>-09:00</MenuItem>\r\n                            <MenuItem value={-10}>-10:00</MenuItem>\r\n                            <MenuItem value={-11}>-11:00</MenuItem>\r\n                            <MenuItem value={-12}>-12:00</MenuItem>\r\n                        </Select>\r\n                        <FormHelperText>Current server time: {currenttime} - Adjusted server time: {newtime}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"headless\" checked={headless} onChange={onHeadless} />}\r\n                        label=\"Run bot in automatic mode\"\r\n                    />\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"running\" checked={running} onChange={onRunning} />}\r\n                        label=\"Bot actived\"\r\n                    />\r\n                </Grid> */}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfigP1 from './ConfigP1';\r\nimport ConfigP2 from './ConfigP2';\r\nimport ConfigP3 from './ConfigP3';\r\nimport ConfigP4 from './ConfigP4';\r\nimport { socket } from '../context/SocketContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: '1000px',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = ['Exchange API', 'Coin Settings', 'Starting Balance', 'General Settings'];\r\n\r\nexport default function ConfigMain() {\r\n    const classes = useStyles();\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const [startingBalance, setStartingBalance] = useContext(StartingBalanceContext);\r\n\r\n    // const [input, setInput] = useState({});\r\n\r\n    // useEffect(() => {\r\n    //     setInput(configuration);\r\n    //     return () => {\r\n    //     }\r\n    // }, [configuration]);\r\n\r\n    const handleNext = () => {\r\n        let error = false;\r\n        if (activeStep === 0) getPortfolio();\r\n        if (activeStep === 3) {\r\n            if (input.botname.length === 0) {\r\n                error = true;\r\n                enqueueSnackbar('Bot name must be defined', {\r\n                    variant: 'error',\r\n                    autoHideDuration: 8000,\r\n                });\r\n            }\r\n            if (Number(input.threshold) === 0) {\r\n                error = true;\r\n                enqueueSnackbar('Threshold must be defined', {\r\n                    variant: 'error',\r\n                    autoHideDuration: 8000,\r\n                });\r\n            }\r\n            if (!error) {\r\n                storeConfiguration();\r\n                // Wait for server confirmation below\r\n            }\r\n        }\r\n        if (activeStep !== 3) setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"configuration-stored\", () => {\r\n            setInput((prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    apiKey: '************',\r\n                    apiSecret: '************',\r\n                }\r\n            }));\r\n            // Reset starting balances to trigger reload (in case coins were added to portfolio)\r\n            setStartingBalance([]);\r\n\r\n            setActiveStep(4);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"configuration-stored\");\r\n        }\r\n    }, []);\r\n\r\n    const handleBack = () => {\r\n        if (activeStep === 2) getPortfolio();\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        let newInput = input;\r\n        newInput[e.field] = e.input;\r\n        setInput(newInput);\r\n    }\r\n\r\n    const getPortfolio = () => {\r\n        if (socket) socket.emit(\"get-portfolio\", {\r\n            apiKey: input.apiKey,\r\n            apiSecret: input.apiSecret,\r\n        });\r\n    }\r\n    const storeConfiguration = () => {\r\n        if (socket) {\r\n            socket.emit(\"store-configuration\", input);\r\n        }\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        // step = 3;\r\n        switch (step) {\r\n            case 0:\r\n                return <ConfigP1 callback={handleInput} />;\r\n            case 1:\r\n                return <ConfigP2 callback={handleInput} />;\r\n            case 2:\r\n                return <ConfigP3 callback={handleInput} />;\r\n            case 3:\r\n                return <ConfigP4 callback={handleInput} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Configuration has been saved\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You can now leave this page\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {getStepContent(activeStep)}\r\n                                <div className={classes.buttons}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} className={classes.button}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? 'Save Configuation' : 'Next'}\r\n                                    </Button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfigMain from \"../components/ConfigMain\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst Configuration = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Configuration\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ConfigMain />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Configuration;","import PieChartIcon from '@material-ui/icons/PieChart';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Portfolio from '../pages/Portfolio';\r\nimport PPerformance from '../pages/PPerformance';\r\nimport CoinAnalysis from '../pages/CoinAnalysis';\r\nimport EventHistory from '../pages/EventHistory';\r\nimport Configuration from '../pages/Configuration';\r\n\r\nconst routesUp = [\r\n  {\r\n    path: '/',\r\n    sidebarName: 'Portfolio',\r\n    icon: PieChartIcon,\r\n    component: Portfolio,\r\n  },\r\n  {\r\n    path: '/performance',\r\n    sidebarName: 'Performance',\r\n    icon: BarChartIcon,\r\n    component: PPerformance,\r\n  },\r\n  {\r\n    path: '/coins',\r\n    sidebarName: 'Coin Analysis',\r\n    icon: ShowChartIcon,\r\n    component: CoinAnalysis,\r\n  },\r\n  {\r\n    path: '/history',\r\n    sidebarName: 'Event History',\r\n    icon: HistoryIcon,\r\n    component: EventHistory,\r\n  },\r\n];\r\n\r\nconst routesDown = [\r\n  {\r\n    path: '/configuration',\r\n    sidebarName: 'Configuration',\r\n    icon: SettingsIcon,\r\n    component: Configuration,\r\n  }\r\n];\r\n\r\nexport { routesUp, routesDown };","import React, { useContext, useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link, Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\r\nimport DMSwitch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\n\r\nimport { routesUp, routesDown } from '../routes/Routes';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  logo: {\r\n    maxWidth: 60,\r\n    padding: 10,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    height: '100%',\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    justify: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function Main() {\r\n  const [mode, setMode] = useLocalStore('mode', 'light');\r\n  const setFiatStore = useLocalStore('fiat', 'EUR')[1];\r\n  const [fiat, setFiat] = useContext(FiatContext);\r\n  const configuration = useContext(ConfigurationContext)[0];\r\n  const { status, updated } = useContext(ServerContext)[0];\r\n\r\n  const [open, setOpen] = useState(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(status !== 'connected' || Object.keys(configuration).length === 0)\r\n    return () => {\r\n    }\r\n  }, [status, configuration]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDarkmode = (e) => {\r\n    (mode === 'light') ? setMode('dark') : setMode('light');\r\n  }\r\n\r\n  const handleFiat = (e) => {\r\n    if (fiat === 'EUR') {\r\n      setFiat('USD');\r\n      setFiatStore('USD');\r\n    } else {\r\n      setFiat('EUR');\r\n      setFiatStore('EUR');\r\n    }\r\n  }\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: mode\r\n    }\r\n  });\r\n\r\n  const StyledButton = withStyles({\r\n    root: {\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      '&:click': {\r\n        backgroundColor: '#f00',\r\n      },\r\n    },\r\n  })(Button);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <BrowserRouter>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <img src=\"/logo192.png\" alt=\"Balance-Bot Logo\" className={classes.logo} />\r\n              <Typography variant=\"h6\" noWrap>\r\n                Balance Bot\r\n          </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer className={classes.drawer} variant=\"permanent\">\r\n            <Paper className={classes.drawerPaper}>\r\n              <Grid container direction=\"column\">\r\n                <Grid item xs={12}>\r\n                  <Toolbar />\r\n                  {(configuration.apiKey !== '') ? (\r\n                    <div className={classes.drawerContainer}>\r\n                      <List>\r\n                        {routesUp.map((prop, key) => {\r\n                          return (\r\n                            <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                              <ListItem button key={prop.sidebarName}>\r\n                                <ListItemIcon><prop.icon /></ListItemIcon>\r\n                                <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                              </ListItem>\r\n                            </Link>\r\n                          );\r\n                        })}\r\n                      </List>\r\n                      <Divider />\r\n                      {routesDown.map((prop, key) => {\r\n                        return (\r\n                          <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                            <ListItem button key={prop.sidebarName}>\r\n                              <ListItemIcon><prop.icon /></ListItemIcon>\r\n                              <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                            </ListItem>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  ) : (\r\n                    <div className={classes.drawerContainer}>\r\n                      <List>\r\n                        {routesUp.map((prop, key) => {\r\n                          return (\r\n                            <Redirect to={'/configuration'} style={{ textDecoration: 'none' }} key={key}>\r\n                              <ListItem button key={prop.sidebarName}>\r\n                                <ListItemIcon><prop.icon /></ListItemIcon>\r\n                                <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                              </ListItem>\r\n                            </Redirect>\r\n                          );\r\n                        })}\r\n                      </List>\r\n                      <Divider />\r\n                      {routesDown.map((prop, key) => {\r\n                        return (\r\n                          <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                            <ListItem button key={prop.sidebarName}>\r\n                              <ListItemIcon><prop.icon /></ListItemIcon>\r\n                              <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                            </ListItem>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Box pt={10}></Box>\r\n                <Divider />\r\n                <Box pt={1} pl={4}>\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      onChange={handleDarkmode}\r\n                      value={mode}\r\n                      control={<DMSwitch checked={mode === 'dark'} color=\"secondary\" />}\r\n                      label={<Typography variant=\"button\">Dark Mode</Typography>}\r\n                      labelPlacement=\"start\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid container item xs={12} alignItems=\"center\">\r\n                    <Grid item xs={6}>\r\n                      <FormControlLabel\r\n                        onChange={handleFiat}\r\n                        value={fiat}\r\n                        control={<DMSwitch checked={fiat === 'EUR'} color=\"secondary\" />}\r\n                        label={<Typography variant=\"button\">USD</Typography>}\r\n                        labelPlacement=\"start\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <StyledButton disableRipple onClick={handleFiat}><Typography variant=\"button\">EUR</Typography></StyledButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Grid>\r\n            </Paper>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            <Switch>\r\n              {routesUp.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n              {routesDown.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}","import { useEffect, useContext } from \"react\";\r\nimport { useSnackbar } from 'notistack';\r\nimport { socket } from '../context/SocketContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { add } from 'date-fns'\r\n\r\nexport default function SocketService() {\r\n    let [{ status, updated }, setServer] = useContext(ServerContext);\r\n    const [balances, setBalances] = useContext(BalancesContext);\r\n    const [performance, setPerformance] = useContext(PerformanceContext);\r\n    const [configuration, setConfiguration] = useContext(ConfigurationContext);\r\n    const [configurationInput, setConfigurationInput] = useContext(ConfigurationInputContext);\r\n    const setStartingBalance = useContext(StartingBalanceContext)[1];\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleEvent = (log, summary) => {\r\n        const variant = (log.type === 'error') ? 'error' : 'success';\r\n        enqueueSnackbar(summary, {\r\n            variant: variant,\r\n            autoHideDuration: 8000,\r\n        });\r\n    };\r\n\r\n    const updatePerformance = () => {\r\n        const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n        let update = [];\r\n\r\n        rows.forEach((coin) => {\r\n            update.push({\r\n                coin: coin.coin,\r\n                number: coin.number,\r\n                price: coin.last,\r\n            });\r\n        });\r\n        if (performance.length !== 0) {\r\n            if (performance[performance.length - 1].date === getDate()) {\r\n                let newPerformance = [...performance];\r\n                newPerformance[newPerformance.length - 1].coins = update;\r\n                newPerformance[newPerformance.length - 1].eur = balances.eur;\r\n                newPerformance[newPerformance.length - 1].usd = balances.usd;\r\n                setPerformance(newPerformance);\r\n            } else {\r\n                // It's a new day, the server will send an update automatically\r\n                console.log(getTimeStamp() + ' | new day, waiting for performance update');\r\n            }\r\n        }\r\n    }\r\n\r\n    const shiftedDate = () => {\r\n        const now = new Date();\r\n        let adjusted = now;\r\n        if (configuration.timeshift && configuration.timeshift !== 0) adjusted = add(now, { hours: configuration.timeshift });\r\n        return adjusted;\r\n    }\r\n\r\n    const getDate = () => {\r\n        const now = shiftedDate();\r\n\r\n        return now.getFullYear() + \"/\" + (now.getMonth() + 1).toString().padStart(2, '0') + \"/\" + now.getDate().toString().padStart(2, '0');\r\n    }\r\n\r\n    function getTimeStamp() {\r\n        const now = shiftedDate();\r\n\r\n        return now.getFullYear() + \"/\" + (now.getMonth() + 1).toString().padStart(2, '0') + \"/\" + now.getDate().toString().padStart(2, '0') + \" \" + now.getHours().toString().padStart(2, '0') + \":\" + now.getMinutes().toString().padStart(2, '0') + \":\" + now.getSeconds().toString().padStart(2, '0');\r\n    }\r\n\r\n    useEffect(() => {\r\n        updatePerformance();\r\n        return () => {\r\n        }\r\n    }, [balances]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"status\", data => {\r\n            setServer({\r\n                status: data,\r\n                updated: updated,\r\n            });\r\n        });\r\n        socket.on(\"balances\", data => {\r\n            setBalances(data);\r\n            setServer({\r\n                status: 'connected',\r\n                updated: data.time,\r\n            });\r\n        });\r\n        socket.on(\"performance\", (logs) => {\r\n            setPerformance(logs);\r\n        });\r\n        socket.on(\"configuration\", (config) => {\r\n            setConfiguration(config);\r\n            setConfigurationInput(config);\r\n        });\r\n        socket.on(\"starting-balances\", (sb) => {\r\n            setStartingBalance(sb);\r\n        });\r\n        socket.on(\"event\", function (log, summary) {\r\n            handleEvent(log, summary);\r\n        });\r\n        socket.on(\"disconnect\", data => {\r\n            setServer({\r\n                status: 'disconnected',\r\n                updated: updated,\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        }\r\n    }, []);\r\n\r\n    return (null);\r\n}","import './App.css';\nimport Main from './pages/Main';\nimport { ServerProvider } from './context/ServerContext';\nimport { BalancesProvider } from './context/BalancesContext';\nimport { PerformanceProvider } from './context/PerformanceContext';\nimport { ConfigurationProvider } from './context/ConfigurationContext';\nimport { ConfigurationInputProvider } from './context/ConfigurationInputContext';\nimport { StartingBalanceProvider } from './context/StartingBalanceContext';\nimport { FiatProvider } from './context/FiatContext';\nimport { SnackbarProvider } from 'notistack';\nimport SocketService from './services/SocketService';\nimport { CssBaseline } from \"@material-ui/core\";\nimport MaterialUIPickers from './components/testdate';\n\nfunction App() {\n  return (\n    <SnackbarProvider maxSnack={5}>\n      <ServerProvider>\n        <BalancesProvider>\n          <PerformanceProvider>\n            <ConfigurationProvider>\n              <ConfigurationInputProvider>\n                <StartingBalanceProvider>\n                  <FiatProvider>\n                    <SocketService />\n                    <CssBaseline />\n                    <Main />\n                    {/* <MaterialUIPickers /> */}\n                  </FiatProvider>\n                </StartingBalanceProvider>\n              </ConfigurationInputProvider>\n            </ConfigurationProvider>\n          </PerformanceProvider>\n        </BalancesProvider>\n      </ServerProvider>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}