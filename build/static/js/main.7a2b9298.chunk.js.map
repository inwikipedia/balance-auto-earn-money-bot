{"version":3,"sources":["components/BalancesTable.js","components/PieChart.js","context/SocketContext.js","context/BalancesContext.js","context/ServerContext.js","components/StatusView.js","components/PerformanceSummary.js","pages/Portfolio.js","components/TimelineView.js","components/LineChart.js","components/LineChartCoins.js","pages/PPerformance.js","components/HistoryTable.js","pages/EventHistory.js","pages/Configuration.js","routes/Routes.js","pages/Main.js","services/LocalStoreService.js","services/SocketService.js","App.js","index.js"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","align","disablePadding","label","useTableHeadStyles","makeStyles","theme","headcolor","palette","type","backgroundColor","EnhancedTableHead","props","checkbox","onSelectAllClick","numSelected","rowCount","onRequestSort","headless","classes","Checkbox","indeterminate","checked","onChange","inputProps","TableHead","TableRow","className","TableCell","padding","headCell","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","spacing","paddingRight","highlight","color","secondary","main","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","selected","portfolio","handleOrder","setSelected","length","Toolbar","clsx","Typography","variant","component","join","Button","style","width","startIcon","selectedCoins","i","selectedCoin","find","coin","push","useStyles","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","formatResult","num","dec","parseFloat","toFixed","BalancesTable","React","useState","setOrder","setOrderBy","useTheme","balances","threshold","onOrder","rows","JSON","parse","Paper","TableContainer","Table","aria-labelledby","aria-label","newSelecteds","n","filter","TableBody","row","isItemSelected","indexOf","labelId","sidechip","sidelabel","side","reverse","distribution","target","Chip","error","disabled","success","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","scope","number","last","value","trade","PieChart","mode","data","tooltip","container","background","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextColor","radialLabelsLinkColor","sliceLabelsSkipAngle","sliceLabelsTextColor","socket","socketio","BalancesContext","createContext","BalancesProvider","setBalances","Provider","children","ServerContext","ServerProvider","status","updated","server","setServer","flexGrow","StatusView","statuschip","useContext","Grid","alignItems","item","xs","startingBalances","setStartingBalances","performance","setPerformance","useEffect","on","sb","handleBalances","off","emit","currentValue","forEach","btcvalue","btcchange","btc","Portfolio","noWrap","Box","mt","stepper","TimelineView","startdate","numdays","steps","setSteps","date","date1","Date","timeDiff","getTime","Math","round","Stepper","alternativeLabel","activeStep","connector","ColorlibConnector","Step","StepLabel","StepIconComponent","ColorlibStepIcon","withStyles","backgroundImage","completed","line","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","display","justifyContent","boxShadow","icons","1","2","String","icon","LineChart","data1","initialValue","initialFiatValue","fiat","raw","values","fiatValues","change","fiatChange","netvalues","netchange","data2","dayOne","initial","day","fiatPrice","eur","fiatValue","coins","price","netvalue","c","x","y","replace","getTheme","axis","ticks","stroke","fill","legend","xScale","format","useUTC","precision","xFormat","yScale","min","max","stacked","yFormat","curve","axisTop","axisRight","axisBottom","axisLeft","legendOffset","legendPosition","enablePoints","enableGridX","enableGridY","lineWidth","useMesh","enableSlices","prices","legends","anchor","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","itemBackground","Performance","logs","StyledTableCell","head","common","black","white","body","fontSize","StyledTableRow","action","errortext","HistoryTable","total","eventdata","setEventdata","page","setFilter","history","setHistory","hist","log","time","handleHistoryChange","summary","pt","p","ToggleButtonGroup","newTypes","ToggleButton","noValidate","autoComplete","TextField","e","size","Pagination","count","ceil","shape","newPage","EventHistory","Configuration","routesUp","path","sidebarName","navbarName","PieChartIcon","ShowChartIcon","PPerformance","HistoryIcon","routesDown","SettingsIcon","appBar","drawer","logo","maxWidth","flexShrink","drawerPaper","drawerContainer","content","Main","localStorageKey","defaultValue","localStorage","getItem","setValue","setItem","useLocalStore","setMode","createMuiTheme","ThemeProvider","CssBaseline","AppBar","src","alt","Drawer","List","prop","key","to","textDecoration","ListItem","button","ListItemIcon","ListItemText","primaryTypographyProps","Divider","FormControl","FormControlLabel","control","labelPlacement","exact","SocketService","enqueueSnackbar","useSnackbar","autoHideDuration","handleEvent","disconnect","App","maxSnack","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a2b9298.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'coin', align: 'left', disablePadding: true, label: 'Coin' },\r\n    { id: 'amount', align: 'right', disablePadding: false, label: 'Amount' },\r\n    { id: 'price', align: 'right', disablePadding: false, label: 'BTC Price' },\r\n    { id: 'value', align: 'right', disablePadding: false, label: 'BTC Value' },\r\n    { id: 'distribution', align: 'right', disablePadding: false, label: 'Distribution %' },\r\n    { id: 'target', align: 'right', disablePadding: false, label: 'Target %' },\r\n    { id: 'trade', align: 'right', disablePadding: false, label: 'Trade' },\r\n    { id: 'side', align: 'right', disablePadding: false, label: 'Order Side' },\r\n];\r\n\r\nconst useTableHeadStyles = makeStyles((theme) => ({\r\n    headcolor:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                backgroundColor: '#aaaaaa',\r\n            }\r\n            : {\r\n                backgroundColor: '#777777',\r\n            },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n    // const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headless } = props;\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headless } = props;\r\n    const classes = useTableHeadStyles();\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    let checkbox;\r\n    if (!headless) {\r\n        checkbox = <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select coins' }}\r\n        />\r\n    } else {\r\n        checkbox = null;\r\n    }\r\n    return (\r\n        <TableHead>\r\n            {/* <TableRow style={{ backgroundColor: '#cccccc' }}> */}\r\n            <TableRow className={classes.headcolor}>\r\n                <TableCell padding=\"checkbox\">\r\n                    {checkbox}\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { selected, headless, portfolio, handleOrder, setSelected } = props;\r\n    const numSelected = selected.length;\r\n\r\n    function onOrder() {\r\n        setSelected([]);\r\n        let selectedCoins = [];\r\n        for (let i = 0; i < selected.length; i++) {\r\n            let selectedCoin = portfolio.find(({ coin }) => coin === selected[i]);\r\n            if (selectedCoin.coin !== 'BTC') selectedCoins.push(selectedCoin);\r\n        }\r\n\r\n        handleOrder(selectedCoins);\r\n    }\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} {(numSelected === 1) ? 'coin' : 'coins'} selected: {selected.join()}\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"subtitle1\" id=\"tableTitle\" component=\"div\">\r\n                    {(!headless) ? ('Select coins to manually submit order') : ('Running in automatic mode')}\r\n                </Typography>\r\n            )}\r\n\r\n            {(numSelected > 0) && (\r\n                <Button variant=\"contained\" color=\"secondary\" style={{ width: '220px' }} startIcon={<BackupIcon />} onClick={onOrder}>\r\n                    Submit Order\r\n                </Button>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    selected: PropTypes.array.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n    portfolio: PropTypes.array.isRequired,\r\n    handleOrder: PropTypes.func.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nfunction formatResult(num, dec) {\r\n    return parseFloat(num.toFixed(dec));\r\n}\r\n\r\nexport default function BalancesTable(props) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const theme = useTheme();\r\n    const balances = props.balances;\r\n    const threshold = balances.threshold;\r\n    const headless = balances.headless || false;\r\n    const handleOrder = props.onOrder;\r\n\r\n    let rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (selected.length === 0) {\r\n            const newSelecteds = rows.map((n) => n.coin).filter(coin => coin !== 'BTC');\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, coin) => {\r\n        if (!headless && coin !== 'BTC') {\r\n            const selectedIndex = selected.indexOf(coin);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, coin);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n        }\r\n    };\r\n\r\n    const isSelected = (coin) => selected.indexOf(coin) !== -1;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar selected={selected} headless={headless} portfolio={rows} handleOrder={handleOrder} setSelected={setSelected} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                            headless={headless}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.coin);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                                    let sidechip = <div style={{ color: '#999999', width: '120px' }}>-</div>;\r\n                                    let sidelabel = row.side;\r\n                                    if (row.reverse) sidelabel += ' (reverse)';\r\n\r\n                                    if (row.side === 'sell') {\r\n                                        if (row.distribution / row.target - 1 >= threshold / 100) {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '120px' }} />\r\n                                        } else {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                        }\r\n                                    } else if (row.side === 'buy') {\r\n                                        if (row.distribution / row.target - 1 <= -threshold / 100) {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '120px' }} />\r\n                                        } else {\r\n                                            sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                        }\r\n                                    }\r\n\r\n                                    let checkbox;\r\n                                    if (!headless && row.coin !== 'BTC') {\r\n                                        checkbox = <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    } else {\r\n                                        checkbox = null;\r\n                                    }\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.coin)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.coin}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                {checkbox}\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.coin}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.number}</TableCell>\r\n                                            <TableCell align=\"right\">{formatResult(row.last, 8)}</TableCell>\r\n                                            <TableCell align=\"right\">{formatResult(row.value, 8)}</TableCell>\r\n                                            <TableCell align=\"right\">{row.distribution}</TableCell>\r\n                                            <TableCell align=\"right\">{row.target}</TableCell>\r\n                                            <TableCell align=\"right\">{formatResult(row.trade, 8)}</TableCell>\r\n                                            <TableCell align=\"right\">{sidechip}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import { ResponsivePie } from '@nivo/pie';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function PieChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    const balances = props.balances;\r\n\r\n    const portfolio = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    const data = portfolio.map(function (coin) {\r\n        return {\r\n            'id': coin.coin,\r\n            'label': coin.coin,\r\n            'value': coin.distribution,\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ResponsivePie\r\n            theme={{\r\n                tooltip: {\r\n                    color: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                    container: {\r\n                        background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\"\r\n                    },\r\n                },\r\n            }}\r\n            data={data}\r\n            margin={{ top: 80, right: 80, bottom: 80, left: 80 }}\r\n            innerRadius={0.5}\r\n            padAngle={1}\r\n            cornerRadius={7}\r\n            colors={{ scheme: 'red_yellow_blue' }}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [['darker', '0.2']] }}\r\n            radialLabelsSkipAngle={10}\r\n            radialLabelsTextColor={(mode === 'light') ? \"#000000\" : \"#FFFFFF\"}\r\n            radialLabelsLinkColor={{ from: 'color' }}\r\n            sliceLabelsSkipAngle={10}\r\n            sliceLabelsTextColor={(mode === 'light') ? \"#000000\" : \"#FFFFFF\"}\r\n        />\r\n    )\r\n}","import socketio from \"socket.io-client\";\r\n\r\nexport const socket = socketio('/');","import React, { useState, createContext } from 'react';\r\n\r\nexport const BalancesContext = createContext();\r\n\r\nexport const BalancesProvider = (props) => {\r\n    const [balances, setBalances] = useState({});\r\n\r\n    return (\r\n        <BalancesContext.Provider value={[balances, setBalances]}>\r\n            {props.children}\r\n        </BalancesContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const ServerContext = createContext();\r\n\r\nexport const ServerProvider = (props) => {\r\n    const [server, setServer] = useState({\r\n        status: 'disconnected',\r\n        updated: '---',\r\n    });\r\n\r\n    return (\r\n        <ServerContext.Provider value={[server, setServer]}>\r\n            {props.children}\r\n        </ServerContext.Provider>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { ServerContext } from '../context/ServerContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function StatusView() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { status, updated } = useContext(ServerContext)[0];\r\n\r\n    let statuschip;\r\n    if (status === 'connected') {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '90px' }} />\r\n    } else {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '110px' }} />\r\n    }\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid container item alignItems=\"center\" xs={6}>\r\n                    <Grid item xs={5}><Typography>Server status: </Typography></Grid>\r\n                    <Grid item xs={7}>{statuschip}</Grid>\r\n                </Grid>\r\n                <Grid container item alignItems=\"center\" xs={6}>\r\n                    <Grid item xs={5}><Typography>Last update: </Typography></Grid>\r\n                    <Grid item xs={7}><b>{updated}</b></Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper >\r\n    )\r\n}","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { socket } from '../context/SocketContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function StatusView(props) {\r\n    const [startingBalances, setStartingBalances] = useState({});\r\n    const [performance, setPerformance] = useState({});\r\n    const balances = props.balances;\r\n\r\n    let rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n\r\n\r\n    const handleBalances = (sb) => {\r\n        setStartingBalances(sb);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('starting-balances', (sb) => {\r\n            handleBalances(sb);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('starting-balances');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socket) socket.emit(\"get-starting-balances\");\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let currentValue = 0;\r\n        rows.forEach((coin) => {\r\n            currentValue += coin.number * coin.last;\r\n        })\r\n\r\n        setPerformance({\r\n            btcvalue: currentValue.toFixed(5),\r\n            btcchange: ((currentValue / startingBalances.btc - 1) * 100).toFixed(2),\r\n        });\r\n    }, [balances, startingBalances]);\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\">\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h2\">{performance.btcvalue}</Typography></Grid>\r\n                <Grid item xs={12}><Typography>BTC value</Typography></Grid>\r\n            </Grid>\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h2\">{performance.btcchange}%</Typography></Grid>\r\n                <Grid item xs={12}><Typography>BTC change</Typography></Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport BalancesTable from \"../components/BalancesTable\";\r\nimport PieChart from \"../components/PieChart\";\r\nimport { socket } from '../context/SocketContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport StatusView from \"../components/StatusView\";\r\nimport PerformanceSummary from \"../components/PerformanceSummary\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Portfolio = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n\r\n  function handleOrder(selected) {\r\n    socket.emit(\"market-order\", selected);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Portfolio\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <BalancesTable balances={balances} onOrder={handleOrder} />\r\n        </Grid>\r\n        <Grid container item direction=\"column\" xs={4}>\r\n          <Grid item xs={12}>\r\n            <Paper style={{ height: '150px' }} className={classes.paper}>\r\n              <PerformanceSummary balances={balances} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box mt={3}>\r\n              <Paper style={{ height: '500px' }} className={classes.paper}>\r\n                <PieChart balances={balances} />\r\n              </Paper>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport default function TimelineView(props) {\r\n    const classes = useStyles();\r\n    const performance = props.data;\r\n    let startdate = '...';\r\n    let numdays = '...';\r\n\r\n    let [steps, setSteps] = useState([]);\r\n\r\n    if (performance.length !== 0) {\r\n        startdate = performance[0].date;\r\n        let date1 = new Date(startdate);\r\n        let date2 = new Date();\r\n\r\n        var timeDiff = date2.getTime() - date1.getTime();\r\n\r\n        numdays = Math.round(timeDiff / (1000 * 3600 * 24));\r\n        startdate = performance[0].date;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSteps([`Started ${startdate}`, `Running ${numdays} days`]);\r\n\r\n        return () => {\r\n        }\r\n    }, [startdate, numdays]);\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Stepper className={classes.stepper} alternativeLabel activeStep={1} connector={<ColorlibConnector />}>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon />,\r\n        2: <Check />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n","import { ResponsiveLine } from '@nivo/line'\r\nimport \"./LineChart.css\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    const fiat = 'EUR';\r\n\r\n    let raw = props.data;\r\n    let type = props.type;\r\n    let title = props.title;\r\n    const balances = props.balances;\r\n    const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    let values = [];\r\n    let fiatValues = [];\r\n    let change = [];\r\n    let fiatChange = [];\r\n    let netvalues = [];\r\n    let netchange = [];\r\n    let data1, data2 = [];\r\n    let initialValue;\r\n    let initialFiatValue;\r\n    let dayOne = [];\r\n\r\n    rows.forEach((coin, i) => {\r\n        dayOne[i] = {\r\n            coin: coin.coin,\r\n            initial: 0,\r\n        };\r\n    });\r\n\r\n    if (raw !== []) {\r\n        raw.forEach((day) => {\r\n            const fiatPrice = (fiat === 'EUR') ? day.eur : day.usd;\r\n            let value = 0;\r\n            let fiatValue = 0;\r\n            day.coins.forEach((coin) => {\r\n                value += coin.number * coin.price;\r\n                fiatValue += coin.number * coin.price * fiatPrice / 1000; // Divided by 1000 to work around an autoscaling graph issue\r\n            });\r\n            if (!initialValue) initialValue = value;\r\n            if (!initialFiatValue) initialFiatValue = fiatValue;\r\n\r\n            let netvalue = 0;\r\n            day.coins.forEach((coin) => {\r\n                // Skip coins that are not in current portfolio\r\n                if (dayOne.find(c => c.coin === coin.coin)) {\r\n                    if (dayOne.find(c => c.coin === coin.coin).initial === 0) dayOne.find(c => c.coin === coin.coin).initial = coin.number;\r\n                    netvalue += dayOne.find(c => c.coin === coin.coin).initial * coin.price;\r\n                }\r\n            })\r\n            values.push({\r\n                x: day.date,\r\n                y: value,\r\n            });\r\n            change.push({\r\n                x: day.date,\r\n                y: (value / initialValue - 1) * 100,\r\n            });\r\n            fiatValues.push({\r\n                x: day.date,\r\n                y: fiatValue,\r\n            });\r\n            fiatChange.push({\r\n                x: day.date,\r\n                y: (fiatValue / initialFiatValue - 1) * 100,\r\n            });\r\n            netvalues.push({\r\n                x: day.date,\r\n                y: value - netvalue,\r\n            });\r\n            netchange.push({\r\n                x: day.date,\r\n                y: ((value - netvalue) / initialValue) * 100,\r\n            });\r\n        });\r\n\r\n        if (type === 'btc') {\r\n            data1 = [\r\n                {\r\n                    id: 'Total Value (BTC)',\r\n                    data: values,\r\n                }\r\n            ];\r\n            data2 = [...data1];\r\n            data2.push(\r\n                {\r\n                    id: 'Total Change (%)',\r\n                    data: change,\r\n                }\r\n            );\r\n        } else if (type === 'fiat') {\r\n            title = title.replace('Fiat', `K${fiat}`);\r\n            data1 = [\r\n                {\r\n                    id: `Total Value (K${fiat})`,\r\n                    data: fiatValues,\r\n                }\r\n            ];\r\n            data2 = [...data1];\r\n            data2.push(\r\n                {\r\n                    id: 'Total Change (%)',\r\n                    data: fiatChange,\r\n                }\r\n            );\r\n        } else {\r\n            data1 = [\r\n                {\r\n                    id: 'Net Balancing Result (BTC)',\r\n                    data: netvalues,\r\n                }\r\n            ];\r\n            data2 = [...data1];\r\n            data2.push(\r\n                {\r\n                    id: 'Net Balancing Result (%)',\r\n                    data: netchange,\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                container: {\r\n                    background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\"\r\n                },\r\n            },\r\n        };\r\n    };\r\n\r\n    const getAxis1 = () => {\r\n        return {\r\n            legend: data1[0].id,\r\n            legendOffset: -80,\r\n            legendPosition: 'middle',\r\n        }\r\n    }\r\n\r\n    const getAxis2 = () => {\r\n        return {\r\n            legend: data2[1].id,\r\n            legendOffset: 60,\r\n            legendPosition: 'middle',\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{title}</b></div>\r\n            <div className=\"graphContainer\">\r\n                <ResponsiveLine\r\n                    data={data1}\r\n                    theme={getTheme()}\r\n                    margin={{ top: 40, right: 80, bottom: 50, left: 90 }}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%Y/%m/%d',\r\n                        useUTC: false,\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%Y/%m/%d\"\r\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                    yFormat=\" >-.8f\"\r\n                    curve=\"monotoneX\"\r\n                    colors={['rgb(255,255,255,0)']}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={null}\r\n                    // axisBottom={{\r\n                    //     format: '%b%y',\r\n                    //     tickValues: 'every 1 months',\r\n                    //     // legend: '',\r\n                    //     // legendOffset: 10,\r\n                    // }}\r\n                    axisLeft={getAxis1()}\r\n                    enablePoints={false}\r\n                    enableGridX={false}\r\n                    enableGridY={false}\r\n                />\r\n            </div>\r\n            <div className=\"secondGraph\">\r\n                <ResponsiveLine\r\n                    data={data2}\r\n                    theme={getTheme()}\r\n                    margin={{ top: 40, right: 80, bottom: 50, left: 90 }}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%Y/%m/%d',\r\n                        useUTC: false,\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%Y/%m/%d\"\r\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                    yFormat=\" >-.8f\"\r\n                    curve=\"monotoneX\"\r\n                    lineWidth={4}\r\n                    colors={['rgb(255,255,255,0)', 'rgb(211,47,47)']} /* Make the first line transparent with 0 opacity */\r\n                    axisTop={null}\r\n                    axisBottom={null}\r\n                    axisRight={getAxis2()}\r\n                    axisLeft={null}\r\n                    enablePoints={false}\r\n                    enableGridX={false}\r\n                    enableGridY={false}\r\n                    useMesh={true}\r\n                    enableSlices=\"x\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ResponsiveLine } from '@nivo/line'\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n\r\n    let raw = props.data;\r\n    const balances = props.balances;\r\n    const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n    let coins = [];\r\n    let data = [];\r\n    let prices = [];\r\n\r\n    rows.forEach((coin, i) => {\r\n        coins.push(coin.coin);\r\n        prices[i] = {\r\n            coin: coin.coin,\r\n            initial: 0,\r\n            data: [],\r\n        };\r\n    });\r\n\r\n    if (raw !== []) {\r\n        coins.forEach((coin, i) => {\r\n            if (coin !== 'BTC') {\r\n                raw.forEach((day) => {\r\n                    day.coins.forEach((c) => {\r\n                        if (c.coin === coin) {\r\n                            if (prices[i].initial === 0) prices[i].initial = c.price;\r\n                            prices[i].data.push({\r\n                                x: day.date,\r\n                                y: (c.price / prices[i].initial - 1) * 100,\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                data.push({\r\n                    id: coin,\r\n                    data: prices[i].data,\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                container: {\r\n                    background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\"\r\n                },\r\n            },\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{props.title}</b></div>\r\n            <div className=\"graphContainer\">\r\n                <ResponsiveLine\r\n                    data={data}\r\n                    theme={getTheme()}\r\n                    margin={{ top: 50, right: 110, bottom: 50, left: 80 }}\r\n                    xScale={{\r\n                        type: 'time',\r\n                        format: '%Y/%m/%d',\r\n                        useUTC: false,\r\n                        precision: 'day',\r\n                    }}\r\n                    xFormat=\"time:%Y/%m/%d\"\r\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                    yFormat=\" >-.8f\"\r\n                    curve=\"monotoneX\"\r\n                    lineWidth={4}\r\n                    colors={{ scheme: 'red_yellow_blue' }}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={null}\r\n                    axisLeft={{\r\n                        legend: 'Change (%)',\r\n                        legendOffset: -70,\r\n                        legendPosition: 'middle',\r\n                    }}\r\n                    enablePoints={false}\r\n                    enableGridX={false}\r\n                    enableGridY={false}\r\n                    useMesh={true}\r\n                    enableSlices=\"x\"\r\n                    legends={[\r\n                        {\r\n                            anchor: 'bottom-right',\r\n                            direction: 'column',\r\n                            justify: false,\r\n                            translateX: 100,\r\n                            translateY: 0,\r\n                            itemsSpacing: 0,\r\n                            itemDirection: 'left-to-right',\r\n                            itemWidth: 80,\r\n                            itemHeight: 20,\r\n                            itemOpacity: 0.75,\r\n                            symbolSize: 12,\r\n                            symbolShape: 'circle',\r\n                            symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                            effects: [\r\n                                {\r\n                                    on: 'hover',\r\n                                    style: {\r\n                                        itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                        itemOpacity: 1\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport { socket } from '../context/SocketContext';\r\nimport LineChart from '../components/LineChart';\r\nimport LineChartCoins from '../components/LineChartCoins';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Performance = () => {\r\n  const classes = useStyles();\r\n\r\n  const [performance, setPerformance] = useState([]);\r\n  const balances = useContext(BalancesContext)[0];\r\n\r\n  useEffect(() => {\r\n    socket.on('performance', (logs) => {\r\n      setPerformance(logs);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('performance');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) socket.emit(\"get-performance\");\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Performance\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={4}>\r\n          <TimelineView data={performance} />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '400px' }} className={classes.paper}>\r\n            <LineChart data={performance} balances={balances} type={'btc'} title={'Portfolio Value (BTC)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '400px' }} className={classes.paper}>\r\n            <LineChart data={performance} balances={balances} type={'fiat'} title={'Portfolio Value (Fiat)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '400px' }} className={classes.paper}>\r\n            <LineChart data={performance} balances={balances} type={'net'} title={'Net Balancing Result (BTC)'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ height: '400px' }} className={classes.paper}>\r\n            <LineChartCoins data={performance} balances={balances} title={'Coin Price Changes (%)'} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Performance;","import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    errortext: {\r\n        color: \"#ff0000\",\r\n    },\r\n}));\r\n\r\nexport default function HistoryTable() {\r\n    const classes = useStyles();\r\n\r\n    let [eventdata, setEventdata] = useState({\r\n        rows: [],\r\n        total: 0,\r\n    });\r\n\r\n    let [filter, setFilter] = useState({\r\n        type: ['order', 'error'],\r\n        event: '',\r\n        page: '1',\r\n    });\r\n\r\n    let [history, setHistory] = useState({\r\n        logs: [],\r\n        total: 0,\r\n    });\r\n\r\n    const handleHistoryChange = (hist) => {\r\n        let rows = []\r\n        hist.logs.reverse().forEach((log) => {\r\n            rows.push({\r\n                time: log.time,\r\n                type: log.type,\r\n                event: log.event,\r\n            });\r\n        });\r\n        setEventdata({\r\n            rows: rows,\r\n            total: hist.total,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleHistoryChange(history);\r\n\r\n        return () => {\r\n        }\r\n    }, [history]);\r\n\r\n\r\n    const handleEvent = (log, summary) => {\r\n        if (socket) socket.emit(\"get-logs\", filter);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on('event-history', (logs, total) => {\r\n            setHistory({\r\n                logs: logs,\r\n                total: total,\r\n            });\r\n        });\r\n        socket.on('event', function (log, summary) {\r\n            handleEvent(log, summary);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('event-history');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socket) socket.emit(\"get-logs\", filter);\r\n        return () => {\r\n        }\r\n    }, [filter]);\r\n\r\n    const handlePage = (event, newPage) => {\r\n        setFilter({\r\n            type: filter.type,\r\n            event: filter.event,\r\n            page: newPage,\r\n        });\r\n    };\r\n\r\n    const handleTypeFilter = (event, newTypes) => {\r\n        setFilter({\r\n            type: newTypes,\r\n            event: filter.event,\r\n            page: filter.page,\r\n        });\r\n    };\r\n\r\n    const handleEventFilter = (e) => {\r\n        setFilter({\r\n            type: filter.type,\r\n            event: e.target.value,\r\n            page: filter.page,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Paper pt={2}>\r\n            <Grid container style={{ height: '60px' }} alignItems=\"center\">\r\n                <Box p={1}>\r\n                    <Grid item xs={3}>\r\n                        <ToggleButtonGroup value={filter.type} onChange={handleTypeFilter} aria-label=\"type selection\">\r\n                            <ToggleButton value=\"order\" aria-label=\"order\" style={{ height: '30px' }} >\r\n                                <Typography variant=\"overline\" noWrap>\r\n                                    Orders\r\n                                </Typography>\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"error\" aria-label=\"error\" style={{ height: '30px' }} >\r\n                                <Typography variant=\"overline\" noWrap>\r\n                                    Errors\r\n                                </Typography>\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Grid>\r\n                </Box>\r\n                <Grid item xs={2}>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <TextField id=\"event-filter\" label=\"Filter events\" color=\"secondary\" onChange={handleEventFilter} />\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={7}></Grid>\r\n            </Grid>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell style={{ width: '170px' }}>Time</StyledTableCell>\r\n                            <StyledTableCell>Event</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {eventdata.rows.map((row) => (\r\n                            <StyledTableRow key={row.time + row.event}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"caption\">{row.time}</Typography>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    {(row.type === 'error') ? (\r\n                                        <Typography variant=\"body2\" className={classes.errortext}>{row.event}</Typography>\r\n                                    ) : (\r\n                                        <Typography variant=\"body2\">{row.event}</Typography>\r\n                                    )}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" >\r\n                <Pagination count={Math.ceil(eventdata.total / 20)} shape=\"rounded\" onChange={handlePage} />\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HistoryTable from \"../components/HistoryTable\";\r\nimport StatusView from '../components/StatusView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EventHistory = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Event History\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <HistoryTable />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default EventHistory;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StatusView from \"../components/StatusView\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst Configuration = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Configuration\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={4}>\r\n          <StatusView />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Configuration;","import PieChartIcon from '@material-ui/icons/PieChart';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Portfolio from '../pages/Portfolio';\r\nimport PPerformance from '../pages/PPerformance';\r\nimport EventHistory from '../pages/EventHistory';\r\nimport Configuration from '../pages/Configuration';\r\n\r\nconst routesUp = [\r\n  {\r\n    path: '/',\r\n    sidebarName: 'Portfolio',\r\n    navbarName: 'Portfolio',\r\n    icon: PieChartIcon,\r\n    component: Portfolio,\r\n  },\r\n  {\r\n    path: '/performance',\r\n    sidebarName: 'Performance',\r\n    navbarName: 'Performance',\r\n    icon: ShowChartIcon,\r\n    component: PPerformance,\r\n  },\r\n  {\r\n    path: '/history',\r\n    sidebarName: 'Event History',\r\n    navbarName: 'Event History',\r\n    icon: HistoryIcon,\r\n    component: EventHistory,\r\n  },\r\n];\r\n\r\nconst routesDown = [\r\n  {\r\n    path: '/configuration',\r\n    sidebarName: 'Configuration',\r\n    navbarName: 'Configuration',\r\n    icon: SettingsIcon,\r\n    component: Configuration,\r\n  }\r\n];\r\n\r\nexport { routesUp, routesDown };","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link, Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport DMSwitch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\n\r\nimport { routesUp, routesDown } from '../routes/Routes';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  logo: {\r\n    maxWidth: 60,\r\n    padding: 10,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    height: '100%',\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    justify: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Main() {\r\n  const classes = useStyles();\r\n\r\n  const [mode, setMode] = useLocalStore('mode', 'light');\r\n\r\n  const handleDarkmode = (e) => {\r\n    (mode === 'light') ? setMode('dark') : setMode('light');\r\n  }\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: mode\r\n    }\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <img src=\"/logo192.png\" alt=\"Balance-Bot Logo\" className={classes.logo} />\r\n              <Typography variant=\"h6\" noWrap>\r\n                Balance Bot\r\n          </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer className={classes.drawer} variant=\"permanent\">\r\n            <Paper className={classes.drawerPaper}>\r\n              <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"stretch\">\r\n                <Grid item>\r\n                  <Toolbar />\r\n                  <div className={classes.drawerContainer}>\r\n                    <List>\r\n                      {routesUp.map((prop, key) => {\r\n                        return (\r\n                          <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                            <ListItem button key={prop.sidebarName}>\r\n                              <ListItemIcon><prop.icon /></ListItemIcon>\r\n                              <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                            </ListItem>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </List>\r\n                    <Divider />\r\n                    {routesDown.map((prop, key) => {\r\n                      return (\r\n                        <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                          <ListItem button key={prop.sidebarName}>\r\n                            <ListItemIcon><prop.icon /></ListItemIcon>\r\n                            <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                          </ListItem>\r\n                        </Link>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl component=\"fieldset\" onChange={handleDarkmode}>\r\n                    <FormControlLabel\r\n                      value={mode}\r\n                      control={<DMSwitch checked={mode === 'dark'} color=\"secondary\" />}\r\n                      label={<Typography variant=\"button\">Dark Mode</Typography>}\r\n                      labelPlacement=\"start\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            <Switch>\r\n              {routesUp.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n              {routesDown.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const useLocalStore = (localStorageKey, defaultValue) => {\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(localStorageKey) || defaultValue\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n\r\n  return [value, setValue];\r\n};","import { useEffect, useContext } from \"react\";\r\nimport { useSnackbar } from 'notistack';\r\nimport { socket } from '../context/SocketContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\n\r\nexport default function SocketService() {\r\n    let [{ status, updated }, setServer] = useContext(ServerContext);\r\n    const setBalances = useContext(BalancesContext)[1];\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleEvent = (log, summary) => {\r\n        const variant = (log.type === 'error') ? 'error' : 'success';\r\n        enqueueSnackbar(summary, {\r\n            variant: variant,\r\n            autoHideDuration: 8000,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"status\", data => {\r\n            setServer({\r\n                status: data,\r\n                updated: updated,\r\n            });\r\n        });\r\n        socket.on(\"balances\", data => {\r\n            setBalances(data);\r\n            setServer({\r\n                status: 'connected',\r\n                updated: data.time,\r\n            });\r\n        });\r\n        socket.on('event', function (log, summary) {\r\n            handleEvent(log, summary);\r\n        });\r\n        socket.on(\"disconnect\", data => {\r\n            setServer({\r\n                status: 'disconnected',\r\n                updated: updated,\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        }\r\n    }, []);\r\n\r\n    return (null);\r\n}","import './App.css';\nimport Main from './pages/Main';\nimport { ServerProvider } from './context/ServerContext';\nimport { BalancesProvider } from './context/BalancesContext';\nimport { SnackbarProvider } from 'notistack';\nimport SocketService from './services/SocketService';\nimport { CssBaseline } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <SnackbarProvider maxSnack={5}>\n      <ServerProvider>\n        <BalancesProvider>\n          <SocketService />\n          <CssBaseline />\n          <Main />\n        </BalancesProvider>\n      </ServerProvider>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}